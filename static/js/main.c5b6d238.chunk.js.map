{"version":3,"sources":["components/films/FilmOverlay.js","components/layout/Header.js","components/layout/Searchbox.js","components/layout/RadioButton.js","components/filters/FilterByRuntime.js","components/layout/Dropdown.js","components/filters/FilterByDecade.js","components/layout/Checkbox.js","components/filters/FilterByGenre.js","components/filters/FilterByWatched.js","components/films/FilmCard.js","components/layout/Pagination.js","components/layout/Footer.js","App.js","serviceWorker.js","index.js"],"names":["FilmOverlay","this","props","handleToggleOverlay","trailer","id","onClick","className","title","itemProp","width","height","src","frameBorder","allow","allowFullScreen","Component","Header","Searchbox","handleChange","searchText","handleAutocomplete","handleSubmit","showFilm","suggestedFilms","onSubmit","htmlFor","placeholder","aria-label","type","value","onChange","onKeyUp","autoComplete","length","map","f","key","year","RadioButton","runtime","runtimeText","runtimeId","checkedRuntime","selectedRuntime","toString","name","defaultChecked","FilterByRuntime","state","runtimes","handleFilterByRuntime","e","r","index","Dropdown","decade","FilterByDecade","decades","handleFilterByDecade","oldestDecade","newestDecade","defaultValue","d","Checkbox","genre","genres","checkedGenre","some","g","includes","FilterByGenre","expanded","genresRef","React","createRef","handleFilterByGenre","mainGenres","extraGenres","ref","setState","elementCoordinates","current","getBoundingClientRect","window","scrollTo","Math","round","y","toggleExpanded","FilterByWatched","handleFilterByWatched","hideWatched","FilmCard","director","watched","whereToWatch","convertTime","toggleFilmWatched","handleFilterByYear","handleFilterByDirector","fullTime","alt","itemScope","href","Pagination","allRecords","itemsPerPage","changePage","currentPage","totalPages","ceil","pageRange","i","push","film","Footer","App","toggleWatched","showFilter","filterName","activeFilter","runtimeFilter","filmRuntime","genreFilter","watchedFilter","yearFilter","decadeFilter","directorFilter","submittedFilter","submitted","submittedQuery","toLowerCase","suggestedFilter","chainFilters","films","filters","filter","parseInt","max","apply","filteredFilms","selectedId","selectedYear","selectedDirector","filterTriggered","filmYears","floor","min","filterWatched","target","selectedIndex","document","querySelector","scrollToSection","goToFilms","indexOf","splice","overlay","time","hours","updatedFilms","forEach","resetProperty","suggestions","searchItem","startsWith","event","preventDefault","loading","contentPerPage","resultsRef","axios","get","then","response","maxRuntime","data","sort","catch","error","filmsperPage","slice","rel","integrity","crossOrigin","Spinner","animation","role","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.c5b6d238.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport class FilmOverlay extends Component {\r\n    static propTypes = {\r\n        handleToggleOverlay: PropTypes.func.isRequired,\r\n        trailer: PropTypes.string.isRequired\r\n    }\r\n\r\n    render() {\r\n        const { handleToggleOverlay, trailer } = this.props;\r\n\r\n        return (\r\n            <div id=\"overlay\" onClick={() => handleToggleOverlay()}>\r\n              <div className=\"overlay__wrapper\">\r\n                <div className=\"overlay__wrapper__video-container\">\r\n                    <iframe \r\n                        title={trailer}\r\n                        itemProp=\"trailer\"\r\n                        className=\"overlay__wrapper__video-container__video\" \r\n                        width=\"560\" \r\n                        height=\"315\" \r\n                        src={`https://www.youtube-nocookie.com/embed/${trailer}`} \r\n                        frameBorder=\"0\" \r\n                        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \r\n                        allowFullScreen>\r\n                    </iframe>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilmOverlay\r\n","import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"col-12 col-md-6 col-lg-6\">\r\n                <header id=\"main-header\">\r\n                    <h1 className=\"header-main\">What to Watch</h1>\r\n                </header>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport class Searchbox extends Component {\r\n    static propTypes = {\r\n        handleChange: PropTypes.func.isRequired,\r\n        searchText: PropTypes.string.isRequired,\r\n        handleAutocomplete: PropTypes.func.isRequired,\r\n        handleSubmit: PropTypes.func.isRequired,\r\n        showFilm: PropTypes.func.isRequired,\r\n        suggestedFilms: PropTypes.array.isRequired\r\n    }\r\n\r\n    render() {\r\n        const { handleChange, searchText, handleAutocomplete, handleSubmit, showFilm, suggestedFilms } = this.props;\r\n\r\n        return (\r\n            <div className=\"col-12 col-md-6 col-lg-4 search-box\">\r\n                  <div className=\"search-box__container\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <label htmlFor=\"search\" className=\"hidden\">Search</label>\r\n                        <input \r\n                            placeholder=\"Enter film title\"\r\n                            id=\"search\"\r\n                            aria-label=\"search\"\r\n                            type=\"text\"  \r\n                            value={searchText} \r\n                            onChange={handleChange}\r\n                            onKeyUp={handleAutocomplete}\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <div className=\"btn-wrapper\">\r\n                            <input className=\"btn-search\" type=\"submit\" value=\"Search\" />\r\n                            {/* <span className=\"btn-search\">Search</span> */}\r\n                        </div>\r\n                        {suggestedFilms.length > 0 && \r\n                            <ul className=\"autocomplete\">\r\n                            {suggestedFilms.map((f,id) => {\r\n                                return (\r\n                                    <li onClick={() => showFilm(f.id)} className=\"film-suggestion\" key={f.id}>{f.title} <span>({f.year})</span></li>\r\n                                )\r\n                            }) \r\n                            }\r\n                            </ul>\r\n                        }\r\n                    </form>\r\n                  </div>\r\n              </div>     \r\n        )\r\n    }\r\n}\r\n\r\nexport default Searchbox\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport class RadioButton extends Component {\r\n    static propTypes = {\r\n        runtime: PropTypes.string.isRequired,\r\n        runtimeText: PropTypes.string.isRequired,\r\n        runtimeId: PropTypes.string.isRequired,\r\n        selectedRuntime: PropTypes.number.isRequired\r\n    }\r\n\r\n    render() {\r\n        const { runtime, runtimeText, runtimeId, selectedRuntime } = this.props;\r\n        let checkedRuntime = false;\r\n        if (runtime === selectedRuntime.toString()){\r\n            checkedRuntime = true;\r\n        }\r\n\r\n        return (\r\n            <div className=\"runtime-filter\">\r\n                <input \r\n                    type=\"radio\" \r\n                    className=\"film-times\" \r\n                    name=\"runtime\" \r\n                    id={runtimeId}\r\n                    value={runtime}\r\n                    defaultChecked={checkedRuntime}\r\n                        />\r\n                <label htmlFor={runtimeId}>{runtimeText}</label>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default RadioButton\r\n","import React, { Component } from 'react'\r\nimport RadioButton from '../layout/RadioButton'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass FilterByRuntime extends Component {\r\n    static propTypes = {\r\n        handleFilterByRuntime: PropTypes.func.isRequired,\r\n        runtime: PropTypes.number.isRequired\r\n    }\r\n\r\n    state = {\r\n        runtimes: [\r\n            {\r\n                runtime: \"90\",\r\n                runtimeId: \"runtime-90\",\r\n                runtimeText: \"1h 30min\"\r\n            },\r\n            {\r\n                runtime: \"120\",\r\n                runtimeId: \"runtime-120\",\r\n                runtimeText: \"2h\"\r\n            },\r\n            {\r\n                runtime: \"150\",\r\n                runtimeId: \"runtime-150\",\r\n                runtimeText: \"2h 30min\"\r\n            },\r\n            {\r\n                runtime: \"180\",\r\n                runtimeId: \"runtime-180\",\r\n                runtimeText: \"3h\"\r\n            },\r\n            {\r\n                runtime: \"9999\",\r\n                runtimeId: \"runtime-all\",\r\n                runtimeText: \"All the time in world\"\r\n            }\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        const { runtime, handleFilterByRuntime } = this.props;\r\n        \r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div id=\"filter-runtime\" className=\"film-filter\">\r\n                        <div id=\"runtimes\">\r\n                            <h2 className=\"filter-header\">How much time do you have?</h2>\t\r\n                                <div id=\"runtimes-filters\" onChange={(e) => handleFilterByRuntime(e)}>\r\n                                    {this.state.runtimes.map((r, index) => {\r\n                                        return (\r\n                                            <RadioButton key={index}\r\n                                                runtime={r.runtime}\r\n                                                runtimeId={r.runtimeId}\r\n                                                runtimeText={r.runtimeText}\r\n                                                selectedRuntime={runtime}\r\n                                            />\r\n                                            )                            \r\n                                    })}  \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilterByRuntime\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Dropdown extends Component {\r\n    static propTypes = {\r\n        decade: PropTypes.number.isRequired\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <option value={this.props.decade}>{this.props.decade}</option>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dropdown\r\n","import React, { Component } from \"react\";\r\nimport Dropdown from '../layout/Dropdown';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass FilterByDecade extends Component {\r\n  static propTypes = {\r\n    handleFilterByDecade: PropTypes.func.isRequired,\r\n    oldestDecade: PropTypes.number.isRequired,\r\n    newestDecade: PropTypes.number.isRequired\r\n  };\r\n\r\n  state = { decades: [ 1960, 1970, 1980, 1990, 2000 , 2010 ] }\r\n\r\n  render() {\r\n    const { handleFilterByDecade, oldestDecade, newestDecade } = this.props;\r\n    const { decades } = this.state;\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n            <div id=\"filter-decades\" className=\"film-filter\">\r\n              <h2 className=\"filter-header\">Which era are you interested on?</h2>\r\n            <div className=\"decades-filters\">\r\n              <label htmlFor=\"oldest-decade\" className=\"decades-filters__label\">From</label>\r\n              <select name=\"decades\" id=\"oldest-decade\" defaultValue={oldestDecade} onChange={(e) => handleFilterByDecade(e)}>\r\n                {decades.map((d, index) => {\r\n                  return (\r\n                      <Dropdown key={index}\r\n                          decade={d}\r\n\r\n                      />\r\n                      )                            \r\n                  })\r\n                }  \r\n              </select>\r\n              <label htmlFor=\"newest-decade\" className=\"decades-filters__label\">To</label>\r\n              <select name=\"decades\" id=\"newest-decade\" defaultValue={newestDecade} onChange={(e) => handleFilterByDecade(e)}>\r\n                {decades.map((d, index) => {\r\n                    return (\r\n                        <Dropdown key={index}\r\n                            decade={d}\r\n                        />\r\n                        )                            \r\n                    })\r\n                }\r\n              </select>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterByDecade;\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Checkbox extends Component {\r\n    static propTypes = {\r\n        genre: PropTypes.string.isRequired,\r\n        genres: PropTypes.array.isRequired\r\n    }   \r\n\r\n    render() {\r\n        const { genre, genres } = this.props;\r\n        let checkedGenre = genres.some(g => genres.includes(genre));\r\n\r\n        return (\r\n            <div className=\"genre-selector\">\r\n                <input id={this.props.genre} defaultChecked={checkedGenre} type=\"checkbox\" className=\"genre-items\" value={this.props.genre} />\r\n                <label htmlFor={this.props.genre}>{this.props.genre}</label>    \r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Checkbox\r\n","import React, { Component } from 'react';\r\nimport Checkbox from '../layout/Checkbox';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FilterByGenre extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            expanded: false\r\n        }\r\n\r\n        this.genresRef = React.createRef();  \r\n    }\r\n\r\n    static propTypes = {\r\n        handleFilterByGenre: PropTypes.func.isRequired,\r\n        mainGenres: PropTypes.array.isRequired,\r\n        extraGenres: PropTypes.array.isRequired,\r\n        genres: PropTypes.array.isRequired\r\n    }\r\n\r\n    render() {\r\n        const { handleFilterByGenre, mainGenres, extraGenres, genres } = this.props;\r\n        \r\n        const toggleExpanded = (ref) => {\r\n            this.setState({ expanded: !this.state.expanded });\r\n            let elementCoordinates = ref.current.getBoundingClientRect();\r\n            window.scrollTo(0, Math.round(elementCoordinates.y));\r\n        }\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div id=\"filter-genres\" className=\"film-filter\">\r\n                        <h2 className=\"filter-header\">Which genres do you like?</h2>\t\r\n                        <div id=\"main-genres\" onChange={(e) => handleFilterByGenre(e)}>\r\n                            {mainGenres.map((g, index) => {\r\n                            return (\r\n                                <Checkbox \r\n                                    key={index} \r\n                                    genre={g}\r\n                                    genres={genres}\r\n                                    />\r\n                            )                            \r\n                             })}\r\n                        </div>\r\n                        <span className={`cta-expand ${this.state.expanded ? 'expanded' : ''}`}\r\n                            onClick={() => toggleExpanded(this.genresRef)}>\r\n                            See all genres\r\n                        </span>\r\n                        <div id=\"extra-genres\" ref={this.genresRef} onChange={(e) => handleFilterByGenre(e)}>\r\n                            {extraGenres.map((g, index) => {\r\n                                return (\r\n                                    <Checkbox \r\n                                    key={index} \r\n                                    genre={g}\r\n                                    genres={genres}\r\n                                    />\r\n                                )                            \r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>        \t\t\r\n                </div>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilterByGenre","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FilterByWatched extends Component {\r\n    static propTypes = {\r\n        handleFilterByWatched: PropTypes.func.isRequired,\r\n        hideWatched: PropTypes.bool.isRequired\r\n    }\r\n\r\n    render() {\r\n        const { handleFilterByWatched , hideWatched} = this.props;\r\n        \r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12 centered\">\r\n                    <div id=\"filter-watched\" className=\"film-filter centered\">\r\n                        <button \r\n                            type=\"button\" \r\n                            className=\"btn btn-sm btn-outline-secondary\" \r\n                            onClick={() => handleFilterByWatched()} \r\n                        >\r\n                        {hideWatched ? 'Show' : 'Hide'} watched    \r\n                        </button>\r\n                    </div>  \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilterByWatched;\r\n","import React, { Fragment, Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FilmCard extends Component {\r\n    static propTypes = {\r\n        id: PropTypes.number.isRequired,\r\n        title: PropTypes.string.isRequired,\r\n        year: PropTypes.number.isRequired,\r\n        director: PropTypes.array.isRequired,\r\n        genres: PropTypes.array.isRequired,\r\n        runtime: PropTypes.number.isRequired,\r\n        watched: PropTypes.bool.isRequired,\r\n        whereToWatch: PropTypes.string.isRequired,\r\n        trailer: PropTypes.string.isRequired,\r\n        handleToggleOverlay: PropTypes.func.isRequired,\r\n        convertTime: PropTypes.func.isRequired,\r\n        toggleFilmWatched: PropTypes.func.isRequired,\r\n        handleFilterByYear: PropTypes.func.isRequired,\r\n        handleFilterByDirector: PropTypes.func.isRequired,\r\n        handleFilterByGenre: PropTypes.func.isRequired\r\n    }\r\n\r\n    render() {\r\n        const { id, title, year, director, genres, runtime, watched, whereToWatch, trailer, handleToggleOverlay, convertTime, toggleFilmWatched, handleFilterByYear, handleFilterByDirector, handleFilterByGenre } = this.props;\r\n        let fullTime = convertTime(runtime);\r\n\r\n        return (\r\n            <div className=\"col-md-4\" key={id}>\r\n                <div className={`card film-card mb-4 box-shadow ${watched ? 'watched' : ''}`}>                \r\n                    <button className=\"icon-watched\" title={`${!watched ? 'Mark as watched' : 'Mark as unwatched'}`} onClick={() => toggleFilmWatched(id)}></button>\r\n                    <img className=\"card-img-top\" src={`https://via.placeholder.com/336x255?text=${title}`} alt={title} />\r\n                    <div className=\"card-body\">                            \r\n                        <p itemScope className=\"card-text\">\r\n                            <span className=\"card-text__category\">Title: </span> \r\n                            <span itemProp=\"title\">{title}</span>\r\n                        </p>\r\n                        <p itemScope className=\"card-text\">\r\n                            <span className=\"card-text__category\">Year: </span> \r\n                            <span className=\"card-text__filter\" itemProp=\"year\" onClick={() => handleFilterByYear(year)}>{year}</span>\r\n                        </p>\r\n                        <p itemScope className=\"card-text\">\r\n                            <span className=\"card-text__category\">Director: </span> \r\n                            {director.map((d, index) => {\r\n                            return (\r\n                                <Fragment key={index}>\r\n                                    <span \r\n                                        className=\"card-text__filter\"\r\n                                        itemProp=\"director\" \r\n                                        onClick={() => handleFilterByDirector(d)}\r\n                                        >\r\n                                    {d}\r\n                                    </span>{(index < director.length - 1) && ', '}\r\n                                </Fragment>\r\n                                )\r\n                                })\r\n                            }\r\n                        </p>\r\n                        <p itemScope className=\"card-text\">\r\n                            <span className=\"card-text__category\">Genres: </span>\r\n                            {genres.map((g, index) => {\r\n                            return (\r\n                                <Fragment key={index}>\r\n                                    <span \r\n                                        className=\"card-text__filter\"\r\n                                        itemProp=\"genre\" \r\n                                        onClick={() => handleFilterByGenre(g)}\r\n                                        >\r\n                                    {g}\r\n                                    </span>{(index < genres.length - 1) && ', '}\r\n                                </Fragment>\r\n                                )\r\n                                })\r\n                            }                            \r\n                        </p>\r\n                        <p itemScope className=\"card-text\">\r\n                            <span className=\"card-text__category\">Runtime: </span>\r\n                            <span itemProp=\"runtime\">{fullTime}</span>\r\n                        </p>\r\n                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                            <div className=\"btn-group\">\r\n                                <a href={`https://www.justwatch.com/uk/movie/${whereToWatch}`} className=\"btn btn-sm btn-outline-secondary btn-vod\">Watch Film</a>\r\n                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary btn-trailer\" onClick={() => handleToggleOverlay(trailer)}>Watch trailer</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilmCard;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Pagination extends Component {\r\n    static propTypes = {\r\n        allRecords: PropTypes.number.isRequired,\r\n        itemsPerPage: PropTypes.number.isRequired,\r\n        changePage: PropTypes.func.isRequired,\r\n        currentPage: PropTypes.number.isRequired\r\n    }\r\n\r\n    render() {\r\n        const { allRecords, itemsPerPage, changePage, currentPage } = this.props;\r\n        let totalPages = Math.ceil(allRecords / itemsPerPage);\r\n        let pageRange = [];\r\n\r\n        for (let i=0; i < totalPages; i++){\r\n            pageRange.push(i + 1);\r\n        }      \r\n\r\n        return (\r\n            <div className=\"film-pagination\">\r\n                <ul className=\"pagination\">\r\n                    {pageRange.map((film, index) => {\r\n                    return (\r\n                    <li key={index} \r\n                        className={`page-item ${currentPage === index + 1 ? \"page-active\" : \"\"}`}\r\n                        onClick={() => changePage(index)}>\r\n                        {film}\r\n                    </li>)\r\n                    })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Pagination\r\n","import React, { Component } from 'react'\r\n\r\nclass Footer extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <footer>\r\n                <small>\r\n                    Work in progress. New features coming soon.\r\n                </small>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React, { Component, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport FilmOverlay from './components/films/FilmOverlay';\r\nimport Header from './components/layout/Header';\r\nimport Searchbox from './components/layout/Searchbox';\r\nimport FilterByRuntime from './components/filters/FilterByRuntime';\r\nimport FilterByDecade from './components/filters/FilterByDecade';\r\nimport FilterByGenre from './components/filters/FilterByGenre';\r\nimport FilterByWatched from './components/filters/FilterByWatched';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport FilmCard from './components/films/FilmCard';\r\nimport Pagination from './components/layout/Pagination';\r\nimport Footer from './components/layout/Footer';\r\n\r\nimport './styles/styles.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.itemsPerPage = 24;\r\n    this.state = { \r\n        filterTriggered: false,\r\n        runtime: 0,\r\n        selectedYear: 0,\r\n        selectedDirector: '',\r\n        oldestDecade: 0,\r\n        newestDecade: 0,\r\n        hideWatched: false,\r\n        genres: [],\r\n        mainGenres: [\"action\" , \"comedy\" , \"drama\" , \"horror\" , \"sci-fi\"],\r\n        extraGenres: [],\r\n        films: [],\r\n        filteredFilms: [],\r\n        searchText: '',\r\n        selectedId: 0,\r\n        suggestedFilms: [],\r\n        submitted: false,\r\n        submittedQuery: '',\r\n        loading: true,\r\n        overlay: false,\r\n        trailer: \"\",\r\n        goToFilms: false,\r\n        activeFilter: '',\r\n        currentPage: 1,\r\n        totalPages: null,\r\n        contentPerPage: []\r\n    };\r\n\r\n    const { runtime, genres, oldestDecade, newestDecade, hideWatched, selectedDirector, selectedYear, selectedId, submitted, submittedQuery } = this.state;\r\n\r\n    // we create the filters properties and assign them the values we get from the state properties. \r\n\r\n    this.filters = {\r\n      runtime,\r\n      genres,\r\n      oldestDecade,\r\n      newestDecade,\r\n      hideWatched,\r\n      director: selectedDirector,\r\n      year: selectedYear,\r\n      id: selectedId,\r\n      submitted: submitted,\r\n      submittedQuery: submittedQuery\r\n    }\r\n\r\n    this.resultsRef = React.createRef();  \r\n  }\r\n  \r\n  componentDidMount() {\r\n    if (this.state.films.length < 1){\r\n      this.setState({ loading: true }, () => {\r\n        axios.get('https://gist.githubusercontent.com/mklmng/fa894dc9c86dfed34e45063adcf1b73e/raw/eab13d0cb818951da46c78ee18d07f904814015b/Films.json')\r\n        .then(response => {\r\n            let maxRuntime = parseInt(Math.max.apply(0, response.data.map(film => film.runtime)));  \r\n            let filmYears = response.data.map(film => film.year);\r\n            let oldestDecade = Math.floor(Math.min.apply(0, filmYears) / 10) * 10;\r\n            let newestDecade = Math.floor(Math.max.apply(0, filmYears) / 10) * 10;\r\n            let extraGenres = [...this.state.extraGenres];\r\n\r\n            if (!extraGenres.length){\r\n              response.data.forEach(film => {\r\n                film.genres.forEach(genre => {\r\n                  if (!extraGenres.includes(genre) && !this.state.mainGenres.includes(genre)){\r\n                    extraGenres.push(genre);\r\n                  }\r\n                });\r\n              })\r\n              extraGenres.sort();\r\n            }          \r\n\r\n            this.setState({ \r\n              loading: false,\r\n              runtime: maxRuntime,\r\n              oldestDecade: oldestDecade,\r\n              newestDecade: newestDecade,\r\n              extraGenres: extraGenres,\r\n              films: response.data,\r\n              filteredFilms: response.data\r\n            })\r\n        })\r\n        .catch(error => {\r\n            this.setState({ loading: false })\r\n        });\r\n      });\r\n    } else {\r\n      this.setState({ films: this.state.films })\r\n    }\r\n  }   \r\n\r\n  toggleWatched = () => { this.setState({ watched: !this.state.watched })};\r\n  showFilter = filterName => this.setState({ activeFilter: filterName });\r\n\r\n  // We define the different functions we'll need to chain every time the user interact with any of the filters.\r\n\r\n  runtimeFilter = (filmRuntime) => (film) => {\r\n    if (filmRuntime > 0){\r\n      return film.runtime <= filmRuntime;\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  genreFilter = (genre) => (film) => {\r\n    if (genre.length){\r\n      return film.genres.some(g => genre.includes(g))\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  watchedFilter = (hideWatched) => (film) => {\r\n    if (hideWatched){\r\n      return film.watched !== hideWatched;\r\n    } else{\r\n      return true;\r\n    }\r\n  }\r\n\r\n  yearFilter = (year) => (film) => {\r\n    if (year > 0){\r\n      return film.year === year;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  decadeFilter = (oldestDecade, newestDecade, year) => (film) => {\r\n    if (year === 0){\r\n      if (oldestDecade > 0 && newestDecade > 0){\r\n        return film.year >= oldestDecade && film.year <= newestDecade + 9;\r\n      } else {\r\n        return true;\r\n      }\r\n    }\r\n    else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  directorFilter = (director) => (film) => {\r\n    if (director.length){\r\n      return film.director.some(d => director.includes(d));\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  submittedFilter = (submitted, submittedQuery) => (film) => {\r\n    if (submitted){\r\n      return film.title.toLowerCase().includes(submittedQuery)\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  suggestedFilter = (id) => (film) => {\r\n    if (id > 0){\r\n      return film.id === id\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // At this stage we have all we need to filter our films array using the functions and properties we defined earlier\r\n  // To make things easier we create a chainfilters function that will pass only two parameters.\r\n  \r\n  chainFilters = (films,filters) => films\r\n    .filter(this.runtimeFilter(filters.runtime))\r\n    .filter(this.genreFilter(filters.genres))\r\n    .filter(this.yearFilter(filters.year))\r\n    .filter(this.decadeFilter(filters.oldestDecade, filters.newestDecade, filters.year))\r\n    .filter(this.directorFilter(filters.director))\r\n    .filter(this.submittedFilter(filters.submitted, filters.submittedQuery))\r\n    .filter(this.suggestedFilter(filters.id))\r\n    .filter(this.watchedFilter(filters.hideWatched));\r\n\r\n  // Some filters like handleFilterByYear, handleFilterByDirector, showFilm or handleSubmit need to reset the values of certain properties (oldestDecade, newestDecade, runtime, genres, etc) to default\r\n  // since if the users selects the year I'm assuming that they want to see all films from that year ignoring possible filters they used earlier like runtime, genres, etc.\r\n\r\n  handleFilterByYear = (y) => {\r\n    this.filters.year = parseInt(y);\r\n\r\n    this.filters.id = 0;\r\n    this.filters.director = '';\r\n    this.filters.hideWatched = false;\r\n    this.filters.submitted = false;\r\n    this.filters.submittedQuery = '';  \r\n    this.filters.runtime = parseInt(Math.max.apply(0, this.state.films.map(film => film.runtime))); \r\n    this.filters.genres = [];\r\n\r\n    let filteredFilms = this.chainFilters(this.state.films, this.filters);\r\n\r\n    this.setState({\r\n      filteredFilms: filteredFilms,\r\n      searchText: '',\r\n      selectedId: 0,\r\n      selectedYear: parseInt(y),\r\n      selectedDirector: '', \r\n      filterTriggered: true,\r\n      submitted: false \r\n    })\r\n  };\r\n\r\n  handleFilterByDirector = (d) => {\r\n    this.filters.id = 0;\r\n    this.filters.year = 0;\r\n    this.filters.hideWatched = false;\r\n    this.filters.submitted = false;\r\n    this.filters.submittedQuery = this.state.searchText;  \r\n    this.filters.director = d;\r\n\r\n    // After assigning the director to the filters director property we need to reset the reset of properties to default values to ensure we see all films by this director\r\n    this.filters.id = 0;\r\n    this.filters.year = 0;\r\n    this.filters.hideWatched = false;\r\n    this.filters.submitted = false;\r\n    this.filters.submittedQuery = '';  \r\n    this.filters.runtime = parseInt(Math.max.apply(0, this.state.films.map(film => film.runtime))); \r\n\r\n    let filmYears = this.state.films.map(film => film.year); // Get the years of the film database\r\n    this.filters.oldestDecade = Math.floor(Math.min.apply(0, filmYears) / 10) * 10;\r\n    this.filters.newestDecade = Math.floor(Math.max.apply(0, filmYears) / 10) * 10;\r\n    this.filters.genres = [];\r\n\r\n    let filteredFilms = this.chainFilters(this.state.films, this.filters);\r\n\r\n    this.setState({\r\n      filteredFilms: filteredFilms,\r\n      searchText: '',\r\n      selectedId: 0,\r\n      selectedDirector: d, \r\n      selectedYear: 0, \r\n      filterTriggered: true,\r\n      submitted: false \r\n    })\r\n  };\r\n\r\n  handleFilterByWatched = () => {\r\n    this.filters.hideWatched = !this.state.hideWatched;\r\n\r\n    let filteredFilms = this.chainFilters(this.state.films, this.filters);\r\n\r\n    this.setState({ \r\n      filteredFilms: filteredFilms,\r\n      hideWatched: !this.state.hideWatched, \r\n      filterWatched: true\r\n    })\r\n  };\r\n\r\n  handleFilterByRuntime = (e) => {\r\n    this.filters.id = 0;\r\n    this.filters.year = 0;\r\n    this.filters.hideWatched = false;\r\n    this.filters.submitted = false;\r\n    this.filters.submittedQuery = this.state.searchText;  \r\n    this.filters.director = '';\r\n\r\n    this.filters.runtime = parseInt(e.target.value);\r\n    let filteredFilms = this.chainFilters(this.state.films, this.filters);\r\n\r\n    this.setState(\r\n      { \r\n        filteredFilms: filteredFilms,\r\n        searchText: '',\r\n        selectedId: 0,\r\n        selectedDirector: '',\r\n        selectedYear: 0,\r\n        runtime: parseInt(e.target.value), \r\n        filterTriggered: true,\r\n        submitted: false \r\n      }\r\n    ); \r\n  } \r\n\r\n  handleFilterByDecade = (e) => {\r\n    const decade = parseInt(e.target.value);\r\n    const selectedIndex = e.target.selectedIndex;\r\n\r\n    this.filters.id = 0;\r\n    this.filters.year = 0;\r\n    this.filters.hideWatched = false;\r\n    this.filters.submitted = false;\r\n    this.filters.submittedQuery = this.state.searchText;  \r\n    this.filters.director = '';\r\n\r\n    if (e.target.id === \"oldest-decade\"){\r\n      if (decade > this.state.newestDecade){\r\n\r\n        this.filters.oldestDecade = decade;\r\n        this.filters.newestDecade = decade;\r\n        let filteredFilms = this.chainFilters(this.state.films, this.filters);\r\n\r\n        this.setState({ \r\n          filteredFilms: filteredFilms,\r\n          searchText: '',\r\n          selectedId: 0,\r\n          selectedDirector: '',\r\n          selectedYear: 0,\r\n          oldestDecade: decade,\r\n          newestDecade: decade,\r\n          filterTriggered: true,\r\n          submitted: false \r\n        })\r\n        document.querySelector(\"#newest-decade\").selectedIndex = selectedIndex;\r\n      } else {\r\n        this.filters.oldestDecade = decade;\r\n        this.filters.newestDecade = this.state.newestDecade;\r\n        let filteredFilms = this.chainFilters(this.state.films, this.filters);\r\n\r\n        this.setState({\r\n          filteredFilms: filteredFilms,\r\n          searchText: '',\r\n          selectedId: 0,\r\n          selectedDirector: '',\r\n          selectedYear: 0,\r\n          oldestDecade: decade,\r\n          filterTriggered: true,\r\n          submitted: false \r\n        })\r\n      }\r\n    }\r\n\r\n    if (e.target.id === \"newest-decade\"){\r\n      this.filters.oldestDecade = this.state.oldestDecade;\r\n\r\n      if (decade >= this.state.oldestDecade){\r\n        this.filters.newestDecade = decade;\r\n        let filteredFilms = this.chainFilters(this.state.films, this.filters);\r\n\r\n        this.setState({ \r\n          filteredFilms: filteredFilms,\r\n          searchText: '',\r\n          selectedId: 0,\r\n          selectedDirector: '',\r\n          selectedYear: 0,\r\n          newestDecade: decade,\r\n          filterTriggered: true,\r\n          submitted: false \r\n        })\r\n      } else {\r\n        this.filters.newestDecade = this.state.oldestDecade;\r\n        let filteredFilms = this.chainFilters(this.state.films, this.filters);\r\n\r\n        this.setState({\r\n          filteredFilms: filteredFilms,\r\n          searchText: '',\r\n          selectedId: 0,\r\n          selectedDirector: '',\r\n          selectedYear: 0,\r\n          newestDecade: this.state.oldestDecade,\r\n          filterTriggered: true,\r\n          submitted: false \r\n        })\r\n        document.querySelector(\"#newest-decade\").selectedIndex = document.querySelector(\"#oldest-decade\").selectedIndex;\r\n      }\r\n    }\r\n  }   \r\n\r\n  // This function was thought to allow the users seeeing the results when they click on the number of matches.\r\n  // Although not necessary for iPad or desktop it should make the UX better in some mobile screens.\r\n\r\n  scrollToSection = (ref) => {\r\n    this.setState({ goToFilms: !this.state.goToFilms });\r\n\r\n    if (this.state.goToFilms){\r\n        window.scrollTo(0,0)\r\n      } else {\r\n        let elementCoordinates = document.querySelector(\".row.product-list\").getBoundingClientRect();\r\n        window.scrollTo(0, Math.round(elementCoordinates.y));\r\n    }\r\n  }\r\n\r\n  handleFilterByGenre = (e) => {\r\n    let genre = \"\";\r\n    // this checks if we are removing genres from the filter tags or adding/removing them from the genre filter\r\n    typeof e === \"string\" ? genre = e : genre = e.target.value;\r\n\r\n    this.filters.id = 0;\r\n    this.filters.year = 0;\r\n    this.filters.hideWatched = false;\r\n    this.filters.submitted = false;\r\n    this.filters.submittedQuery = this.state.searchText;  \r\n    this.filters.director = '';\r\n\r\n    if (!this.state.genres.includes(genre)){\r\n      this.filters.genres = [...this.state.genres, genre];    \r\n      let filteredFilms = this.chainFilters(this.state.films, this.filters);\r\n\r\n      this.setState({\r\n        filteredFilms: filteredFilms,\r\n        searchText: '',\r\n        selectedId: 0,\r\n        selectedDirector: '',\r\n        selectedYear: 0,\r\n        genres: [...this.state.genres, genre],\r\n        filterTriggered: true,\r\n        submitted: false \r\n      })\r\n    } else {\r\n        let genres = [...this.state.genres];\r\n        let index = genres.indexOf(genre);\r\n        genres.splice(index, 1);\r\n\r\n        this.filters.genres = genres;  \r\n\r\n        let filteredFilms = this.chainFilters(this.state.films, this.filters);\r\n\r\n        this.setState({ \r\n          filteredFilms: filteredFilms,\r\n          searchText: '',\r\n          selectedId: 0,\r\n          selectedDirector: '',\r\n          selectedYear: 0,\r\n          genres: genres,\r\n          filterTriggered: true,\r\n          submitted: false \r\n        })\r\n    }\r\n  }\r\n\r\n  // Shows the overlay with the emndedded trailer when the users click on the \"Watch the trailer\" cta.\r\n  handleToggleOverlay = (trailer) => {\r\n      this.setState({ \r\n        overlay: !this.state.overlay, \r\n        trailer: trailer \r\n      })\r\n  }\r\n\r\n  // Converts the runtime from minutes to hours and minutes to make it more readable for the users.\r\n  convertTime = (time) => {\r\n    let hours = time / 60;\r\n    if (time < 60){\r\n        return `${time}mins`;\r\n    } \r\n    let fullTime = ((time % 60) > 0) ? `${Math.floor(hours)}h ${(time % 60)}mins` : `${hours}h`;\r\n    return fullTime;\r\n  }\r\n\r\n  // Allows the user to mark/unmark films as watched interacting with eye icon and \"The End\" text on the film cards.\r\n  toggleFilmWatched = (id) => {\r\n    let updatedFilms = [...this.state.films];\r\n    updatedFilms.forEach(f => {\r\n      if (f.id === id){\r\n        f.watched = !f.watched;\r\n      }\r\n    });\r\n    this.setState({ films: updatedFilms, selectedDirector: '' })\r\n  }\r\n\r\n  // This function empties the values of directors and years when the users click on the respective label tags.\r\n  resetProperty = (e) => {\r\n    if (e === \"director\"){\r\n      this.setState({ \r\n        selectedDirector: ''\r\n      })\r\n    }\r\n    if (e === \"year\"){\r\n      this.setState({ \r\n        selectedYear: 0\r\n      })\r\n    }\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    !e.target.value.length \r\n    ? \r\n    this.setState({\r\n      searchText: e.target.value,\r\n      filterTriggered: true,\r\n      suggestedFilms: [],\r\n      submittedQuery: ''\r\n    })\r\n    :\r\n    this.setState({ \r\n      searchText: e.target.value,\r\n      filterTriggered: true,\r\n      submittedQuery: ''\r\n     }) \r\n  };\r\n\r\n  handleAutocomplete = (e) => {\r\n    if (this.state.searchText.length > 0){\r\n      let suggestions = [];\r\n      let searchItem = e.target.value.toLowerCase();\r\n      this.state.films.forEach(f => {\r\n        let title = f.title.toLowerCase();\r\n        if (title.startsWith(searchItem)){\r\n            suggestions.push(f);\r\n          }\r\n        }\r\n      )\r\n      this.setState({ suggestedFilms: suggestions, submitted: false, filterTriggered: true })\r\n    }\r\n  }\r\n\r\n  // If the users click on one the autosuggested films the film card will show it as the only match.\r\n  showFilm = (id) => {\r\n    this.filters.id = id;\r\n    this.filters.year = 0;\r\n    this.filters.hideWatched = false;\r\n    this.filters.submitted = false;\r\n    this.filters.submittedQuery = '';  \r\n    this.filters.director = '';\r\n    this.filters.runtime = parseInt(Math.max.apply(0, this.state.films.map(film => film.runtime))); \r\n\r\n    let filmYears = this.state.films.map(film => film.year); // Get the years of the film database\r\n    this.filters.oldestDecade = Math.floor(Math.min.apply(0, filmYears) / 10) * 10;\r\n    this.filters.newestDecade = Math.floor(Math.max.apply(0, filmYears) / 10) * 10;\r\n    this.filters.genres = [];\r\n\r\n    let filteredFilms = this.chainFilters(this.state.films, this.filters);\r\n\r\n    this.setState({\r\n      filteredFilms: filteredFilms,\r\n      searchText: '',\r\n      selectedId: id,\r\n      suggestedFilms: [],\r\n      filterTriggered: true,\r\n      submitted: false,\r\n      genres: []\r\n    })\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n   \r\n    // After assigning the director to the filters director property we need to reset the reset of properties to default values to ensure we see all films by this director\r\n    this.filters.id = 0;\r\n    this.filters.year = 0;\r\n    this.filters.hideWatched = false;\r\n    this.filters.submitted = true;\r\n    this.filters.submittedQuery = this.state.searchText;  \r\n    this.filters.director = '';\r\n    this.filters.runtime = parseInt(Math.max.apply(0, this.state.films.map(film => film.runtime))); \r\n\r\n    let filmYears = this.state.films.map(film => film.year); // Get the years of the film database\r\n    this.filters.oldestDecade = Math.floor(Math.min.apply(0, filmYears) / 10) * 10;\r\n    this.filters.newestDecade = Math.floor(Math.max.apply(0, filmYears) / 10) * 10;\r\n    this.filters.genres = [];\r\n\r\n    let filteredFilms = this.chainFilters(this.state.films, this.filters);\r\n\r\n    this.setState({\r\n      filteredFilms: filteredFilms,\r\n      submittedQuery: this.state.searchText,\r\n      suggestedFilms: [],\r\n      submitted: true,\r\n      selectedId: 0,\r\n      searchText: ''\r\n    })\r\n  }\r\n\r\n  changePage = (index) => {\r\n    this.setState({\r\n      currentPage: parseInt(index + 1)\r\n    })\r\n  }\r\n    \r\n  render(){\r\n    const { currentPage, filteredFilms, filterTriggered, suggestedFilms, searchText, submitted, submittedQuery, runtime, selectedYear, selectedDirector, oldestDecade, newestDecade, hideWatched, genres, trailer, overlay, activeFilter, mainGenres, extraGenres } = this.state;\r\n    let filmsperPage = filteredFilms;\r\n\r\n    if (filteredFilms.length > 24){\r\n      filmsperPage = filteredFilms.slice(((currentPage) - 1) * 24,(currentPage * 24));\r\n    } \r\n\r\n    let fullTime = this.convertTime(runtime);\r\n\r\n    return (\r\n      <div id=\"full-wrapper\">\r\n        <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\" integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\" crossOrigin=\"anonymous\" />\r\n\r\n        {overlay &&  <FilmOverlay handleToggleOverlay={this.handleToggleOverlay} trailer={trailer} /> }\r\n\r\n        <div className=\"container\">\r\n          <div className=\"row below2\">\r\n            <Header />\r\n            <Searchbox\r\n              searchText={searchText}\r\n              suggestedFilms={suggestedFilms}\r\n              handleChange={this.handleChange}\r\n              handleAutocomplete={this.handleAutocomplete}\r\n              handleSubmit={this.handleSubmit}\r\n              showFilm={this.showFilm}\r\n            />\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <div className=\"main-filters\">\r\n                <h2 className=\"sub-header\">Filter by</h2>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-12 col-md-4\">\r\n            <button \r\n                className={`btn btn-sm btn-lg-3 btn-outline-secondary btn-filter ${activeFilter === 'runtime' ? 'active' : ''}`}\r\n                onClick={() => this.showFilter('runtime')}\r\n            >Runtime</button><button\r\n              className={`btn btn-sm btn-lg-3 btn-outline-secondary btn-filter ${activeFilter === 'genre' ? 'active' : ''}`}\r\n              onClick={() => this.showFilter('genre')}\r\n            >Genre</button><button\r\n              className={`btn btn-sm btn-lg-3 btn-outline-secondary btn-filter ${activeFilter === 'decade' ? 'active' : ''}`}\r\n            onClick={() => this.showFilter('decade')}\r\n          >Decade</button>\r\n            </div>\r\n          </div>\r\n          <Fragment>\r\n            {activeFilter === 'runtime' &&\r\n                <FilterByRuntime \r\n                  handleFilterByRuntime={this.handleFilterByRuntime}\r\n                  runtime={runtime}\r\n                  />\r\n            }\r\n            {activeFilter === 'genre' && \r\n                <FilterByGenre \r\n                  handleFilterByGenre={this.handleFilterByGenre} \r\n                  mainGenres={mainGenres}\r\n                  extraGenres={extraGenres}\r\n                  genres={genres}\r\n              />\r\n            }\r\n            {activeFilter === 'decade' &&  \r\n            <FilterByDecade \r\n              handleFilterByDecade={this.handleFilterByDecade}\r\n              oldestDecade={oldestDecade}\r\n              newestDecade={newestDecade}\r\n                />  }\r\n            <FilterByWatched \r\n              handleFilterByWatched={this.handleFilterByWatched}\r\n              hideWatched={hideWatched}  \r\n            />\r\n          </Fragment>\r\n          <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                {filterTriggered &&\r\n                  <div id=\"search-labels\">\r\n                    <p className=\"search-labels__content\">\r\n                      <span className=\"search-labels__content__intro\">Looking for:</span>\r\n                      {(submittedQuery.length > 0 || submitted) && \r\n                        <span className=\"search-labels__tag\">{submittedQuery}</span>\r\n                      }\r\n\r\n                      {(searchText.length > 0) && \r\n                        <span className=\"search-labels__tag\">{searchText}</span>\r\n                      }\r\n\r\n                      {!(searchText.length > 0 || submitted) && \r\n                      <Fragment>\r\n                        {genres.map((g,index) => {\r\n                          return (\r\n                            <span key={index} className=\"search-labels__tag search-labels__tag--interactive\" onClick={() => this.handleFilterByGenre(g)}>{g}</span>\r\n                          )\r\n                        })\r\n                        }\r\n\r\n                        {((runtime !== 0) && (runtime < 181)) && \r\n                        <span className=\"search-labels__tag\">{fullTime} or less</span>\r\n                        }\r\n\r\n                        {((selectedYear === 0) && oldestDecade === newestDecade) && \r\n                          <span className=\"search-labels__tag\">{oldestDecade}s</span>\r\n                        }\r\n                        {((selectedYear === 0) && !(oldestDecade === newestDecade)) && \r\n                        <span className=\"search-labels__tag\">{oldestDecade}s - {newestDecade}s</span>\r\n                        }\r\n\r\n                        {selectedYear > 0 && <span className=\"search-labels__tag search-labels__tag--interactive\" onClick={() => this.resetProperty(\"year\")}>{selectedYear}</span> }\r\n                        {selectedDirector !== \"\" && <span className=\"search-labels__tag search-labels__tag--interactive\" onClick={() => this.resetProperty(\"director\")}>Directed by {selectedDirector}</span> }\r\n                        {hideWatched && <span className=\"search-labels__tag search-labels__tag--interactive\" onClick={() => this.handleFilterByWatched()}>unseen</span>}\r\n                      </Fragment>\r\n                      }\r\n                    </p>\r\n                  </div>\r\n                }\r\n                  <div id=\"results\" ref={this.resultsRef}  onClick={() => this.scrollToSection(this.resultsRef)}>\r\n                    <p className={`film-results ${this.state.goToFilms ? \"return\" : \"\"}`}>\r\n                      {filteredFilms.length > 1 && \r\n                        <span>\r\n                            There are <strong>{filteredFilms.length}</strong> matches.\r\n                        </span>\r\n                        }\r\n                        {filteredFilms.length === 1 &&\r\n                        <span>\r\n                            There is <strong>1</strong> match.\r\n                        </span>\r\n                        }\r\n                        {!filteredFilms.length && \r\n                        <span>Sorry, there aren't any matches.</span>\r\n                        }\r\n                    </p>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <div className=\"row product-list\">\r\n              {this.state.loading && \r\n                <Spinner animation=\"border\" role=\"status\">\r\n                  <span className=\"sr-only\">Loading...</span>\r\n                </Spinner>\r\n              }\r\n              {!this.state.loading &&\r\n                filmsperPage.map((film) => {\r\n                  return (\r\n                    <FilmCard \r\n                        key={film.id}\r\n                        id={film.id}\r\n                        title={film.title}\r\n                        year={film.year}\r\n                        director={film.director}\r\n                        genres={film.genres}\r\n                        runtime={film.runtime}\r\n                        watched={film.watched}\r\n                        whereToWatch={film.whereToWatch}\r\n                        trailer={film.trailer}\r\n                        overlay={this.state.overlay}\r\n                        handleToggleOverlay={this.handleToggleOverlay}\r\n                        convertTime={this.convertTime}\r\n                        toggleFilmWatched={this.toggleFilmWatched}\r\n                        handleFilterByYear={this.handleFilterByYear}\r\n                        handleFilterByDirector={this.handleFilterByDirector}\r\n                        handleFilterByGenre={this.handleFilterByGenre}\r\n                    />\r\n                  )                            \r\n                })\r\n              }\r\n          </div>\r\n\r\n          {filteredFilms.length > 24 && \r\n            <Pagination \r\n              allRecords={filteredFilms.length} \r\n              itemsPerPage={this.itemsPerPage} \r\n              changePage={this.changePage}\r\n              currentPage={currentPage}\r\n            />\r\n          }\r\n\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}