{"version":3,"sources":["components/films/FilmOverlay.js","components/layout/Header.js","components/filters/FilterByWatched.js","components/layout/RadioButton.js","components/filters/FilterByRuntime.js","components/layout/Dropdown.js","components/filters/FilterByDecade.js","components/layout/Checkbox.js","components/filters/FilterByGenre.js","components/films/FilmCard.js","components/layout/Footer.js","App.js","serviceWorker.js","index.js"],"names":["FilmOverlay","id","onClick","props","handleToggleOverlay","className","title","this","trailer","width","height","src","frameborder","allow","allowfullscreen","Component","Header","onChange","switchTheme","htmlFor","nightTheme","type","name","FilterByWatched","handleFilterByWatched","hideWatched","RadioButton","runtimeId","value","runtime","runtimeText","FilterByRuntime","state","runtimes","e","handleFilterByRuntime","map","r","index","key","Dropdown","decade","FilterByDecade","decades","defaultValue","handleFilterByDecade","d","Checkbox","genre","FilterByGenre","expanded","genresRef","React","createRef","handleFilterByGenre","mainGenres","g","ref","setState","elementCoordinates","current","getBoundingClientRect","window","scrollTo","Math","round","y","toggleExpanded","extraGenres","FilmCard","fullGenres","genres","join","fullDirector","director","length","fullTime","time","hours","floor","convertTime","alt","year","href","whereToWatch","Footer","App","parseInt","target","selectedIndex","newestDecade","oldestDecade","document","querySelector","scrollToSection","goToFilms","includes","indexOf","splice","overlay","films","loading","resultsRef","axios","get","then","response","maxRuntime","max","apply","data","film","filmYears","min","forEach","push","sort","catch","error","filteredFilms","filter","watched","some","f","console","log","rel","integrity","crossOrigin","Spinner","animation","role","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8cbcdf87.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport class FilmOverlay extends Component {\r\n    static propTypes = {\r\n        handleToggleOverlay: PropTypes.func.isRequired,\r\n        trailer: PropTypes.string.isRequired\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"overlay\" onClick={() => this.props.handleToggleOverlay()}>\r\n              <div className=\"overlay__wrapper\">\r\n                <div className=\"overlay__wrapper__video-container\">\r\n                    <iframe \r\n                        title={this.props.trailer}\r\n                        className=\"overlay__wrapper__video-container__video\" \r\n                        width=\"560\" \r\n                        height=\"315\" \r\n                        src={`https://www.youtube-nocookie.com/embed/${this.props.trailer}`} \r\n                        frameborder=\"0\" \r\n                        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" \r\n                        allowfullscreen=\"\">\r\n                    </iframe>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilmOverlay\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Header extends Component {\r\n    static propTypes = {\r\n        nightTheme: PropTypes.bool.isRequired,\r\n        switchTheme: PropTypes.func.isRequired\r\n    }    \r\n\r\n    render() {\r\n        return (\r\n            <header>\r\n                <h1 className=\"header-main\">What to Watch</h1>\r\n                <div id=\"theme-switcher\" onChange={() => this.props.switchTheme()}>\r\n\t\t\t        <label htmlFor=\"theme\">\r\n                        {this.props.nightTheme && \"Night \" }    \r\n                        {!this.props.nightTheme && \"Day \" }\r\n                        theme \r\n                    </label>\r\n\t\t\t        <input type=\"checkbox\" name=\"theme\" id=\"theme\" />\r\n\t\t        </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FilterByWatched extends Component {\r\n    static propTypes = {\r\n        handleFilterByWatched: PropTypes.func.isRequired,\r\n        hideWatched: PropTypes.bool.isRequired\r\n    }\r\n\r\n    render() {\r\n        const { handleFilterByWatched , hideWatched} = this.props;\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12 centered\">\r\n                    <div id=\"filter-watched\" className=\"film-filter centered\">\r\n                        <button \r\n                            type=\"button\" \r\n                            className=\"btn btn-sm btn-outline-secondary\" \r\n                            onClick={() => handleFilterByWatched()} \r\n                        >\r\n                        {hideWatched ? 'Show' : 'Hide'} watched    \r\n                        </button>\r\n                    </div>  \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilterByWatched;\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport class RadioButton extends Component {\r\n    static propTypes = {\r\n        runtime: PropTypes.string.isRequired,\r\n        runtimeText: PropTypes.string.isRequired,\r\n        runtimeId: PropTypes.string.isRequired\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"runtime-filter\">\r\n                <input \r\n                    type=\"radio\" \r\n                    className=\"film-times\" \r\n                    name=\"runtime\" \r\n                    id={this.props.runtimeId}\r\n                    value={this.props.runtime}\r\n                        />\r\n                <label htmlFor={this.props.runtimeId}>{this.props.runtimeText}</label>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default RadioButton\r\n","import React, { Component } from 'react'\r\nimport RadioButton from '../layout/RadioButton'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass FilterByRuntime extends Component {\r\n    static propTypes = {\r\n        handleFilterByRuntime: PropTypes.func.isRequired\r\n    }\r\n\r\n    state = {\r\n        runtimes: [\r\n            {\r\n                runtime: \"90\",\r\n                runtimeId: \"runtime-90\",\r\n                runtimeText: \"1h 30min\"\r\n            },\r\n            {\r\n                runtime: \"120\",\r\n                runtimeId: \"runtime-120\",\r\n                runtimeText: \"2h\"\r\n            },\r\n            {\r\n                runtime: \"150\",\r\n                runtimeId: \"runtime-150\",\r\n                runtimeText: \"2h 30min\"\r\n            },\r\n            {\r\n                runtime: \"180\",\r\n                runtimeId: \"runtime-180\",\r\n                runtimeText: \"3h\"\r\n            },\r\n            {\r\n                runtime: \"9999\",\r\n                runtimeId: \"runtime-all\",\r\n                runtimeText: \"All the time in world\"\r\n            }\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div id=\"filter-runtime\" className=\"film-filter\">\r\n                        <div id=\"runtimes\">\r\n                            <h2 className=\"filter-header\">How much time do you have?</h2>\t\r\n                                <div id=\"runtimes-filters\" onChange={(e) => this.props.handleFilterByRuntime(e)}>\r\n                                    {this.state.runtimes.map((r, index) => {\r\n                                        return (\r\n                                            <RadioButton key={index}\r\n                                                runtime={r.runtime}\r\n                                                runtimeId={r.runtimeId}\r\n                                                runtimeText={r.runtimeText}\r\n                                            />\r\n                                            )                            \r\n                                    })}  \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilterByRuntime\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Dropdown extends Component {\r\n    static propTypes = {\r\n        decade: PropTypes.number.isRequired\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <option value={this.props.decade}>{this.props.decade}</option>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dropdown\r\n","import React, { Component } from \"react\";\r\nimport Dropdown from '../layout/Dropdown';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass FilterByDecade extends Component {\r\n  static propTypes = {\r\n    handleFilterByDecade: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = { decades: [ 1960, 1970, 1980, 1990, 2000 , 2010 ] }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n            <div id=\"filter-decades\" className=\"film-filter\">\r\n              <h2 className=\"filter-header\">Which era are you interested on?</h2>\r\n            <div className=\"decades-filters\">\r\n              <label htmlFor=\"oldest-decade\" className=\"decades-filters__label\">From</label>\r\n              <select name=\"decades\" id=\"oldest-decade\" defaultValue=\"1960\" onChange={(e) => this.props.handleFilterByDecade(e)}>\r\n                {this.state.decades.map((d, index) => {\r\n                  return (\r\n                      <Dropdown key={index}\r\n                          decade={d}\r\n                      />\r\n                      )                            \r\n                  })\r\n                }  \r\n              </select>\r\n              <label htmlFor=\"newest-decade\" className=\"decades-filters__label\">To</label>\r\n              <select name=\"decades\" id=\"newest-decade\" defaultValue=\"2010\" onChange={(e) => this.props.handleFilterByDecade(e)}>\r\n                {this.state.decades.map((d, index) => {\r\n                    return (\r\n                        <Dropdown key={index}\r\n                            decade={d}\r\n                        />\r\n                        )                            \r\n                    })\r\n                }\r\n              </select>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterByDecade;\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Checkbox extends Component {\r\n    static propTypes = {\r\n        genre: PropTypes.string.isRequired\r\n    }   \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"genre-selector\">\r\n                <input id={this.props.genre} type=\"checkbox\" className=\"genre-items\" value={this.props.genre} />\r\n                <label htmlFor={this.props.genre}>{this.props.genre}</label>    \r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Checkbox\r\n","import React, { Component } from 'react';\r\nimport Checkbox from '../layout/Checkbox';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FilterByGenre extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            expanded: false\r\n        }\r\n\r\n        this.genresRef = React.createRef();  \r\n    }\r\n\r\n    static propTypes = {\r\n        handleFilterByGenre: PropTypes.func.isRequired,\r\n        mainGenres: PropTypes.array.isRequired,\r\n        extraGenres: PropTypes.array.isRequired\r\n    }\r\n\r\n    render() {\r\n        const toggleExpanded = (ref) => {\r\n            this.setState({ expanded: !this.state.expanded });\r\n            let elementCoordinates = ref.current.getBoundingClientRect();\r\n            window.scrollTo(0, Math.round(elementCoordinates.y));\r\n        }\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div id=\"filter-genres\" className=\"film-filter\">\r\n                        <h2 className=\"filter-header\">What genres do you like?</h2>\t\r\n                        <div id=\"main-genres\" onChange={(e) => this.props.handleFilterByGenre(e)}>\r\n                            {this.props.mainGenres.map((g, index) => {\r\n                            return (\r\n                                <Checkbox key={index} genre={g} />\r\n                            )                            \r\n                             })}\r\n                        </div>\r\n                        <span className={`cta-expand ${this.state.expanded ? 'expanded' : ''}`}\r\n                            onClick={() => toggleExpanded(this.genresRef)}>\r\n                            See all genres\r\n                        </span>\r\n                        <div id=\"extra-genres\" ref={this.genresRef} onChange={(e) => this.props.handleFilterByGenre(e)}>\r\n                            {this.props.extraGenres.map((g, index) => {\r\n                                return (\r\n                                    <Checkbox key={index} genre={g} />\r\n                                )                            \r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>        \t\t\r\n                </div>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilterByGenre","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FilmCard extends Component {\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n        year: PropTypes.number.isRequired,\r\n        director: PropTypes.array.isRequired,\r\n        genres: PropTypes.array.isRequired,\r\n        whereToWatch: PropTypes.string.isRequired,\r\n        handleToggleOverlay: PropTypes.func.isRequired,\r\n        trailer: PropTypes.string.isRequired\r\n    }\r\n\r\n    render() {\r\n        const convertTime = (time) => {\r\n            let hours = time / 60;\r\n            if (time < 60){\r\n                return `${time}mins`;\r\n            } \r\n            let fullTime = ((time % 60) > 0) ? `${Math.floor(hours)}h ${(time % 60)}mins` : `${hours}h`;\r\n            return fullTime;\r\n        }\r\n\r\n        let fullGenres = this.props.genres.join(\", \");\r\n        let fullDirector = (this.props.director.length > 1 ? this.props.director.join(\", \") : this.props.director);\r\n        let fullTime = convertTime(this.props.runtime);\r\n\r\n        return (\r\n            <div className=\"col-md-4\" key={this.props.id}>\r\n                <div className=\"card mb-4 box-shadow\">\r\n                    <img className=\"card-img-top\" src={`https://via.placeholder.com/336x255?text=${this.props.title}`} alt={this.props.title} />\r\n                    <div className=\"card-body\">                            \r\n                        <p className=\"card-text\">\r\n                            <span>Title: </span> {this.props.title}\r\n                        </p>\r\n                        <p className=\"card-text\">\r\n                            <span>Year: </span> {this.props.year}\r\n                        </p>\r\n                        <p className=\"card-text\">\r\n                            <span>Director: </span> {fullDirector}\r\n                        </p>\r\n                        <p className=\"card-text\">\r\n                            <span>Genres: </span> {fullGenres}\r\n                        </p>\r\n                        <p className=\"card-text\">\r\n                            <span>Runtime: </span> {fullTime}\r\n                        </p>\r\n                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                            <div className=\"btn-group\">\r\n                                <a href={`https://www.justwatch.com/uk/movie/${this.props.whereToWatch}`} className=\"btn btn-sm btn-outline-secondary btn-vod\">Watch Film</a>\r\n                                <button type=\"button\" className=\"btn btn-sm btn-outline-secondary btn-trailer\" onClick={() => this.props.handleToggleOverlay(this.props.trailer)}>Watch trailer</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilmCard;","import React, { Component } from 'react'\r\n\r\nclass Footer extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <footer>\r\n                <small>\r\n                    Work in progress. New features coming soon.\r\n                </small>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React, { Component, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport FilmOverlay from './components/films/FilmOverlay';\r\nimport Header from './components/layout/Header';\r\nimport FilterByWatched from './components/filters/FilterByWatched';\r\nimport FilterByRuntime from './components/filters/FilterByRuntime';\r\nimport FilterByDecade from './components/filters/FilterByDecade';\r\nimport FilterByGenre from './components/filters/FilterByGenre';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport FilmCard from './components/films/FilmCard';\r\nimport Footer from './components/layout/Footer';\r\n\r\nimport './styles/styles.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n        nightTheme: false,\r\n        runtime: 0,\r\n        oldestDecade: 0,\r\n        newestDecade: 0,\r\n        hideWatched: false,\r\n        genres: [],\r\n        mainGenres: [\"action\" , \"comedy\" , \"drama\" , \"horror\" , \"sci-fi\"],\r\n        extraGenres: [],\r\n        films: [],\r\n        loading: true,\r\n        overlay: false,\r\n        trailer: \"\",\r\n        goToFilms: false\r\n    };\r\n\r\n    this.resultsRef = React.createRef();  \r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.setState({ loading: true }, () => {\r\n        axios.get('https://gist.githubusercontent.com/mklmng/fa894dc9c86dfed34e45063adcf1b73e/raw/eb77422572bbf7bee0ebaf86c02eb1fe99730195/Films.json')\r\n        .then(response => {\r\n            let maxRuntime = parseInt(Math.max.apply(0, response.data.map(film => film.runtime)));  \r\n            let filmYears = response.data.map(film => film.year);\r\n            let oldestDecade = Math.floor(Math.min.apply(0, filmYears) / 10) * 10;\r\n            let newestDecade = Math.floor(Math.max.apply(0, filmYears) / 10) * 10;\r\n            let extraGenres = [...this.state.extraGenres];\r\n\r\n            if (!extraGenres.length){\r\n              response.data.forEach(film => {\r\n                film.genres.forEach(genre => {\r\n                  if (!extraGenres.includes(genre) && !this.state.mainGenres.includes(genre)){\r\n                    extraGenres.push(genre);\r\n                  }\r\n                });\r\n              })\r\n              extraGenres.sort();\r\n            }          \r\n\r\n            this.setState({ \r\n              loading: false,\r\n              runtime: maxRuntime,\r\n              oldestDecade: oldestDecade,\r\n              newestDecade: newestDecade,\r\n              extraGenres: extraGenres,\r\n              films: response.data\r\n            })\r\n        })\r\n        .catch(error => {\r\n            this.setState({ loading: false })\r\n        });\r\n    });\r\n  }   \r\n\r\n  switchTheme = () => this.setState({nightTheme: !this.state.nightTheme });  \r\n\r\n  handleFilterByWatched = () => this.setState({ hideWatched: !this.state.hideWatched });\r\n  handleFilterByRuntime = e => this.setState({ runtime: parseInt(e.target.value) }); \r\n  handleFilterByDecade = (e) => {\r\n    const decade = parseInt(e.target.value);\r\n    const selectedIndex = e.target.selectedIndex;\r\n\r\n    if (e.target.id === \"oldest-decade\"){\r\n      if (decade > this.state.newestDecade){\r\n        this.setState({ \r\n          oldestDecade: decade,\r\n          newestDecade: decade\r\n        })\r\n        document.querySelector(\"#newest-decade\").selectedIndex = selectedIndex;\r\n      } else {\r\n        this.setState({\r\n          oldestDecade: decade,\r\n        })\r\n      }\r\n    }\r\n\r\n    if (e.target.id === \"newest-decade\"){\r\n      if (e.target.value >= this.state.oldestDecade){\r\n        this.setState({ \r\n          newestDecade: decade\r\n        })\r\n      } else {\r\n        this.setState({\r\n          newestDecade: this.state.oldestDecade\r\n        })\r\n        document.querySelector(\"#newest-decade\").selectedIndex = document.querySelector(\"#oldest-decade\").selectedIndex;\r\n      }\r\n    }\r\n  }   \r\n\r\n  scrollToSection = (ref) => {\r\n    this.setState({ goToFilms: !this.state.goToFilms });\r\n\r\n    if (this.state.goToFilms){\r\n        window.scrollTo(0,0)\r\n      } else {\r\n        let elementCoordinates = ref.current.getBoundingClientRect();\r\n        window.scrollTo(0, Math.round(elementCoordinates.y));\r\n    }\r\n  }\r\n\r\n  handleFilterByGenre = (e) => {\r\n    let genre = e.target.value;\r\n\r\n    if (!this.state.genres.includes(genre)){\r\n      this.setState({\r\n        genres: [...this.state.genres, genre]\r\n      })\r\n    } else {\r\n        let genres = [...this.state.genres];\r\n        let index = genres.indexOf(e.target.value);\r\n        genres.splice(index, 1);\r\n        this.setState({ genres: genres })\r\n    }\r\n  }\r\n\r\n  handleToggleOverlay = (trailer) => {\r\n      this.setState({ overlay: !this.state.overlay, trailer: trailer })\r\n  }\r\n  \r\n  render(){\r\n    let filteredFilms = this.state.films.filter(film => \r\n      film.runtime <= this.state.runtime\r\n      && film.runtime <= this.state.runtime\r\n      && (film.year >= this.state.oldestDecade && film.year <= this.state.newestDecade + 9) \r\n    )\r\n\r\n    if (this.state.hideWatched){\r\n        filteredFilms = filteredFilms.filter(film => \r\n            film.watched === !this.state.hideWatched \r\n        )               \r\n    } \r\n\r\n    if (this.state.genres.length){\r\n        filteredFilms = filteredFilms.filter(film => \r\n            film.genres.some(g => this.state.genres.includes(g))\r\n        )\r\n    }\r\n\r\n    if (this.state.hideWatched){\r\n      filteredFilms = filteredFilms.filter(f => !f.watched);\r\n      console.log(\"hide watched\");\r\n    }\r\n\r\n    return (\r\n      <div id=\"full-wrapper\" className={`${this.state.nightTheme && 'dark'}`}>\r\n        <link\r\n            rel=\"stylesheet\"\r\n            href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\"\r\n            integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\"\r\n            crossOrigin=\"anonymous\"\r\n          />\r\n\r\n        {this.state.overlay &&  <FilmOverlay handleToggleOverlay={this.handleToggleOverlay} trailer={this.state.trailer} /> }\r\n\r\n        <Header\r\n          nightTheme={this.state.nightTheme}\r\n          switchTheme={this.switchTheme}\r\n        />\r\n        <div className=\"container\">\r\n          <Fragment>\r\n            <FilterByWatched \r\n              handleFilterByWatched={this.handleFilterByWatched}\r\n              hideWatched={this.state.hideWatched}  \r\n            />\r\n            <FilterByRuntime handleFilterByRuntime={this.handleFilterByRuntime} />\r\n            <FilterByGenre \r\n              handleFilterByGenre={this.handleFilterByGenre} \r\n              mainGenres={this.state.mainGenres}\r\n              extraGenres={this.state.extraGenres}\r\n            />\r\n            <FilterByDecade handleFilterByDecade={this.handleFilterByDecade} />  \r\n          </Fragment>\r\n\r\n          <div className=\"row\">\r\n              <div className=\"col-md-12\">\r\n                  <div id=\"results\" ref={this.resultsRef}  onClick={() => this.scrollToSection(this.resultsRef)}>\r\n                    <p className={`film-results ${this.state.goToFilms ? \"return\" : \"\"}`}>\r\n                      {filteredFilms.length > 1 && \r\n                        <span>\r\n                            There are <strong>{filteredFilms.length}</strong> matches.\r\n                        </span>\r\n                        }\r\n                        {filteredFilms.length === 1 &&\r\n                        <span>\r\n                            There is <strong>1</strong> match.\r\n                        </span>\r\n                        }\r\n                        {!filteredFilms.length && \r\n                        <span>Sorry, there aren't any matches.</span>\r\n                        }\r\n                    </p>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <div className=\"row product-list\">\r\n              {this.state.loading && \r\n                <Spinner animation=\"border\" role=\"status\">\r\n                  <span className=\"sr-only\">Loading...</span>\r\n                </Spinner>\r\n              }\r\n              {filteredFilms.map((film) => {\r\n                return (\r\n                  <FilmCard \r\n                      key={film.id}\r\n                      id={film.id}\r\n                      title={film.title}\r\n                      year={film.year}\r\n                      director={film.director}\r\n                      genres={film.genres}\r\n                      runtime={film.runtime}\r\n                      whereToWatch={film.whereToWatch}\r\n                      trailer={film.trailer}\r\n                      overlay={this.state.overlay}\r\n                      handleToggleOverlay={this.handleToggleOverlay}\r\n                  />\r\n                )                            \r\n              })}\r\n          </div>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}