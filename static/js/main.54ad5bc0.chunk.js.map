{"version":3,"sources":["components/layout/Header.js","components/filters/FilterByWatched.js","components/filters/FilterByRuntime.js","components/filters/FilterByDecade.js","components/films/FilmCard.js","components/films/FilmList.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","id","onChange","props","switchTheme","htmlFor","this","nightTheme","type","name","Component","FilterByWatched","handleFilterByWatched","FilterByRuntime","e","handleFilterByRuntime","value","FilterByDecade","defaultValue","handleFilterByDecade","FilmCard","fullGenres","genres","join","fullDirector","director","length","fullTime","time","hours","Math","floor","convertTime","runtime","key","src","title","alt","year","href","whereToWatch","FilmList","state","films","loading","setState","axios","get","then","response","data","catch","error","filteredFilms","watched","filter","film","oldestDecade","newestDecade","Spinner","animation","role","map","trailer","App","parseInt","target","decade","selectedIndex","document","querySelector","rel","integrity","crossOrigin","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.54ad5bc0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class Header extends Component {\r\n    static propTypes = {\r\n        nightTheme: PropTypes.bool.isRequired,\r\n        switchTheme: PropTypes.func.isRequired\r\n    }    \r\n\r\n    render() {\r\n        return (\r\n            <header>\r\n                <h1 className=\"header-main\">What to Watch</h1>\r\n                <div id=\"theme-switcher\" onChange={() => this.props.switchTheme()}>\r\n\t\t\t        <label htmlFor=\"theme\">\r\n                        {this.props.nightTheme && \"Nigh \" }    \r\n                        {!this.props.nightTheme && \"Day \" }\r\n                        theme \r\n                    </label>\r\n\t\t\t        <input type=\"checkbox\" name=\"theme\" id=\"theme\" />\r\n\t\t        </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FilterByWatched extends Component {\r\n    static propTypes = {\r\n        handleFilterByWatched: PropTypes.func.isRequired\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div id=\"filter-watched\" className=\"film-filter centered\">\r\n                        <label htmlFor=\"watched\">Hide films I have watched</label>\r\n                        <input \r\n                            type=\"checkbox\" \r\n                            name=\"watched\" \r\n                            id=\"watched\" \r\n                            onChange={() => this.props.handleFilterByWatched()} \r\n                        /> \r\n                    </div>  \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilterByWatched;\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport class FilterByRuntime extends Component {\r\n    static propTypes = {\r\n        handleFilterByRuntime: PropTypes.func.isRequired\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div id=\"filter-runtime\" className=\"film-filter\">\r\n                        <div id=\"runtimes\">\r\n                            <h2 className=\"filter-header\">How much time do you have?</h2>\t\r\n                                <div id=\"runtimes-filters\" onChange={(e) => this.props.handleFilterByRuntime(e)}>\r\n                                    <div className=\"runtime-filter\">\r\n                                        <input \r\n                                            type=\"radio\" \r\n                                            className=\"film-times\" \r\n                                            name=\"runtime\" \r\n                                            id=\"runtime-90\"\r\n                                            value=\"90\"\r\n                                                />\r\n                                        <label htmlFor=\"runtime-90\">1h 30min</label>\r\n                                    </div><div className=\"runtime-filter\">\r\n                                        <input \r\n                                            type=\"radio\" \r\n                                            className=\"film-times\" \r\n                                            name=\"runtime\" \r\n                                            id=\"runtime-120\"\r\n                                            value=\"120\"\r\n                                                />\r\n                                            <label htmlFor=\"runtime-120\">2h</label>\r\n                                    </div><div className=\"runtime-filter\">\r\n                                        <input \r\n                                            type=\"radio\" \r\n                                            className=\"film-times\" \r\n                                            name=\"runtime\" \r\n                                            id=\"runtime-150\"\r\n                                            value=\"150\"\r\n                                                />\r\n                                        <label htmlFor=\"runtime-150\">2h 30min</label>\r\n                                    </div><div className=\"runtime-filter\">\r\n                                        <input \r\n                                            type=\"radio\" \r\n                                            className=\"film-times\" \r\n                                            name=\"runtime\" \r\n                                            id=\"runtime-180\"\r\n                                            value=\"180\"\r\n                                                />\r\n                                        <label htmlFor=\"runtime-180\">3h</label>\r\n                                    </div><div className=\"runtime-filter\">\r\n                                        <input \r\n                                            type=\"radio\" \r\n                                            className=\"film-times\" \r\n                                            name=\"runtime\" \r\n                                            id=\"runtime-all\"\r\n                                            value=\"9999\"\r\n                                        />\r\n                                        <label htmlFor=\"runtime-all\">All the time in world</label>\r\n                                    </div>    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilterByRuntime\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class FilterByDecade extends Component {\r\n  static propTypes = {\r\n    handleFilterByDecade: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n            <div id=\"filter-decades\" className=\"film-filter\">\r\n              <h2 className=\"filter-header\">Which era are you interested on?</h2>\r\n            <div className=\"decades-filters\">\r\n              <label htmlFor=\"oldest-decade\" className=\"decades-filters__label\">From</label>\r\n              <select name=\"decades\" id=\"oldest-decade\" defaultValue=\"1960\" onChange={(e) => this.props.handleFilterByDecade(e)}>\r\n                <option value=\"1960\">1960s</option>\r\n                <option value=\"1970\">1970s</option>\r\n                <option value=\"1980\">1980s</option>\r\n                <option value=\"1990\">1990s</option>\r\n                <option value=\"2000\">2000s</option>\r\n                <option value=\"2010\">2010s</option>\r\n              </select>\r\n              <label htmlFor=\"newest-decade\" className=\"decades-filters__label\">To</label>\r\n              <select name=\"decades\" id=\"newest-decade\" defaultValue=\"2010\" onChange={(e) => this.props.handleFilterByDecade(e)}>\r\n                <option value=\"1960\">1960s</option>\r\n                <option value=\"1970\">1970s</option>\r\n                <option value=\"1980\">1980s</option>\r\n                <option value=\"1990\">1990s</option>\r\n                <option value=\"2000\">2000s</option>\r\n                <option value=\"2010\">2010s</option>\r\n              </select>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterByDecade;\r\n","import React, { Fragment , Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class FilmCard extends Component {\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n        year: PropTypes.number.isRequired,\r\n        director: PropTypes.array.isRequired,\r\n        genres: PropTypes.array.isRequired,\r\n        whereToWatch: PropTypes.string.isRequired\r\n    }\r\n\r\n    render() {\r\n        const convertTime = (time) => {\r\n            let hours = time / 60;\r\n            if (time < 60){\r\n                return `${time}mins`;\r\n            } \r\n            let fullTime = ((time % 60) > 0) ? `${Math.floor(hours)}h ${(time % 60)}mins` : `${hours}h`;\r\n            return fullTime;\r\n        }\r\n\r\n        let fullGenres = this.props.genres.join(\", \");\r\n        let fullDirector = (this.props.director.length > 1 ? this.props.director.join(\", \") : this.props.director);\r\n        let fullTime = convertTime(this.props.runtime);\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"col-md-4\" key={this.props.id}>\r\n                    <div className=\"card mb-4 box-shadow\">\r\n                        <img className=\"card-img-top\" src={`https://via.placeholder.com/336x255?text=${this.props.title}`} alt={this.props.title} />\r\n                        <div className=\"card-body\">\r\n                            <p className=\"card-text\">\r\n                                <span>Title: </span> {this.props.title}\r\n                            </p>\r\n                            <p className=\"card-text\">\r\n                                <span>Year: </span> {this.props.year}\r\n                            </p>\r\n                            <p className=\"card-text\">\r\n                                <span>Director: </span> {fullDirector}\r\n                            </p>\r\n                            <p className=\"card-text\">\r\n                                <span>Genres: </span> {fullGenres}\r\n                            </p>\r\n                            <p className=\"card-text\">\r\n                                <span>Runtime: </span> {fullTime}\r\n                            </p>\r\n                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <div className=\"btn-group\">\r\n                                    <a href={`https://www.justwatch.com/uk/movie/${this.props.whereToWatch}`} className=\"btn btn-sm btn-outline-secondary\">Watch Film</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>    \r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilmCard;","import React, { Fragment , Component } from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport FilmCard from './FilmCard';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport class FilmList extends Component {\r\n    static propTypes = {\r\n        watched: PropTypes.bool.isRequired,\r\n        runtime: PropTypes.number.isRequired,\r\n        oldestDecade: PropTypes.number.isRequired,\r\n        newestDecade: PropTypes.number.isRequired\r\n    }\r\n\r\n    state = {\r\n        films: [],\r\n        loading: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ loading: true }, () => {\r\n            axios.get('https://gist.githubusercontent.com/mklmng/fa894dc9c86dfed34e45063adcf1b73e/raw/aaebe9185fbb4b1ebcaf5343335168c9d2898f9a/Films.json')\r\n            .then(response => {\r\n                this.setState({ films: response.data, loading: false })\r\n            })\r\n            .catch(error => {\r\n                this.setState({ loading: false })\r\n            });\r\n        });\r\n    }   \r\n\r\n    render() {\r\n        let filteredFilms = this.state.films;\r\n        if (!this.props.watched){\r\n            filteredFilms = filteredFilms.filter(film => \r\n                film.watched === this.props.watched \r\n                && film.runtime <= this.props.runtime\r\n                && (film.year >= this.props.oldestDecade && film.year <= this.props.newestDecade + 9)                     \r\n                );\r\n        } else{\r\n            filteredFilms = filteredFilms.filter(film => \r\n                film.runtime <= this.props.runtime\r\n                && film.runtime <= this.props.runtime\r\n                && (film.year >= this.props.oldestDecade && film.year <= this.props.newestDecade + 9) \r\n                );\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        {filteredFilms.length && \r\n                            <div id=\"results\">\r\n                            {filteredFilms.length > 1 && \r\n                            <span>\r\n                                There are <strong>{filteredFilms.length}</strong> matches.\r\n                            </span>}\r\n                            {filteredFilms.length === 1 &&\r\n                            <span>\r\n                                There is <strong>{filteredFilms.length}</strong> match.\r\n                            </span>}\r\n                            {!filteredFilms.length &&\r\n                            <span>\r\n                                Sorry, there aren't any matches.\r\n                            </span>\r\n                            }\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {this.state.loading && <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>}\r\n                    {filteredFilms.map((film) => {\r\n                        return (\r\n                            <FilmCard \r\n                                key={film.id}\r\n                                id={film.id}\r\n                                title={film.title}\r\n                                year={film.year}\r\n                                director={film.director}\r\n                                genres={film.genres}\r\n                                runtime={film.runtime}\r\n                                whereToWatch={film.whereToWatch}\r\n                                trailer={film.trailer}\r\n                            />\r\n                        )                            \r\n                    })}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    } \r\n}\r\n\r\nexport default FilmList","import React, { Component } from 'react';\nimport Header from './components/layout/Header';\nimport FilterByWatched from './components/filters/FilterByWatched';\nimport FilterByRuntime from './components/filters/FilterByRuntime';\nimport FilterbyDecade from './components/filters/FilterByDecade';\nimport FilmList from './components/films/FilmList';\n\nimport './styles/styles.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        nightTheme: false,\n        runtime: 9999,\n        oldestDecade: 1960,\n        newestDecade: 2010,\n        watched: true,\n        genres: [],\n    };\n  }\n\n  switchTheme = () => this.setState({nightTheme: !this.state.nightTheme }); \n  handleFilterByWatched = () => this.setState({ watched: !this.state.watched });\n  handleFilterByRuntime = (e) => this.setState({ runtime:  parseInt(e.target.value) }); \n  handleFilterByDecade = (e) => {\n    const decade = parseInt(e.target.value);\n    const selectedIndex = e.target.selectedIndex;\n\n    if (e.target.id === \"oldest-decade\"){\n      if (decade > this.state.newestDecade){\n        this.setState({ \n          oldestDecade: decade,\n          newestDecade: decade\n        })\n        document.querySelector(\"#newest-decade\").selectedIndex = selectedIndex;\n      } else {\n        this.setState({\n          oldestDecade: decade,\n        })\n      }\n    }\n\n    if (e.target.id === \"newest-decade\"){\n      if (e.target.value >= this.state.oldestDecade){\n        this.setState({ \n          newestDecade: decade\n        })\n      } else {\n        this.setState({\n          newestDecade: this.state.oldestDecade\n        })\n        document.querySelector(\"#newest-decade\").selectedIndex = document.querySelector(\"#oldest-decade\").selectedIndex;\n      }\n    }\n  }   \n  \n  render(){\n    return (\n      <div id=\"full-wrapper\" className={`${this.state.nightTheme && 'dark'}`}>\n        <link\n            rel=\"stylesheet\"\n            href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\"\n            integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\"\n            crossOrigin=\"anonymous\"\n          />\n        <Header\n          nightTheme={this.state.nightTheme}\n          switchTheme={this.switchTheme}\n        />\n        <div className=\"container\">\n          <FilterByWatched handleFilterByWatched={this.handleFilterByWatched} />\n          <FilterByRuntime handleFilterByRuntime={this.handleFilterByRuntime} />\n          <FilterbyDecade handleFilterByDecade={this.handleFilterByDecade} />\n          <FilmList \n            watched={this.state.watched}\n            runtime={this.state.runtime}\n            oldestDecade={this.state.oldestDecade}\n            newestDecade={this.state.newestDecade}\n            />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}