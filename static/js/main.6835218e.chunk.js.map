{"version":3,"sources":["components/layout/Header.js","components/filters/FilterByWatched.js","components/filters/FilterByRuntime.js","components/filters/FilterByDecade.js","components/filters/FilterByGenre.js","components/films/FilmCard.js","components/films/FilmList.js","components/layout/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","id","onChange","props","switchTheme","htmlFor","this","nightTheme","type","name","Component","FilterByWatched","handleFilterByWatched","FilterByRuntime","e","handleFilterByRuntime","value","FilterByDecade","defaultValue","handleFilterByDecade","FilterByGenre","state","expanded","handleFilterByGenre","onClick","setState","FilmCard","fullGenres","genres","join","fullDirector","director","length","fullTime","time","hours","Math","floor","convertTime","runtime","key","src","title","alt","year","href","whereToWatch","FilmList","films","loading","axios","get","then","response","data","catch","error","filteredFilms","filter","film","oldestDecade","newestDecade","hideWatched","watched","some","g","includes","Spinner","animation","role","map","trailer","Footer","App","parseInt","target","decade","selectedIndex","document","querySelector","genre","index","indexOf","splice","rel","integrity","crossOrigin","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"sSA0BeA,E,uKAjBD,IAAD,OACL,OACI,gCACI,wBAAIC,UAAU,eAAd,iBACA,yBAAKC,GAAG,iBAAiBC,SAAU,kBAAM,EAAKC,MAAMC,gBACzD,2BAAOC,QAAQ,SACDC,KAAKH,MAAMI,YAAc,UACxBD,KAAKH,MAAMI,YAAc,OAFxC,SAKA,2BAAOC,KAAK,WAAWC,KAAK,QAAQR,GAAG,gB,GAhB7BS,aCwBNC,E,uKAnBD,IAAD,OACL,OACI,yBAAKX,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKC,GAAG,iBAAiBD,UAAU,wBAC/B,2BAAOK,QAAQ,WAAf,6BACA,2BACIG,KAAK,WACLC,KAAK,UACLR,GAAG,UACHC,SAAU,kBAAM,EAAKC,MAAMS,kC,GAfzBF,aCoEfG,E,uKA/DD,IAAD,OACL,OACI,yBAAKb,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKC,GAAG,iBAAiBD,UAAU,eAC/B,yBAAKC,GAAG,YACJ,wBAAID,UAAU,iBAAd,8BACI,yBAAKC,GAAG,mBAAmBC,SAAU,SAACY,GAAD,OAAO,EAAKX,MAAMY,sBAAsBD,KACzE,yBAAKd,UAAU,kBACX,2BACIQ,KAAK,QACLR,UAAU,aACVS,KAAK,UACLR,GAAG,aACHe,MAAM,OAEV,2BAAOX,QAAQ,cAAf,aACE,yBAAKL,UAAU,kBACjB,2BACIQ,KAAK,QACLR,UAAU,aACVS,KAAK,UACLR,GAAG,cACHe,MAAM,QAEN,2BAAOX,QAAQ,eAAf,OACF,yBAAKL,UAAU,kBACjB,2BACIQ,KAAK,QACLR,UAAU,aACVS,KAAK,UACLR,GAAG,cACHe,MAAM,QAEV,2BAAOX,QAAQ,eAAf,aACE,yBAAKL,UAAU,kBACjB,2BACIQ,KAAK,QACLR,UAAU,aACVS,KAAK,UACLR,GAAG,cACHe,MAAM,QAEV,2BAAOX,QAAQ,eAAf,OACE,yBAAKL,UAAU,kBACjB,2BACIQ,KAAK,QACLR,UAAU,aACVS,KAAK,UACLR,GAAG,cACHe,MAAM,SAEV,2BAAOX,QAAQ,eAAf,mC,GAzDVK,aCsCfO,E,uKAjCH,IAAD,OACP,OACE,yBAAKjB,UAAU,OACb,yBAAKA,UAAU,aACX,yBAAKC,GAAG,iBAAiBD,UAAU,eACjC,wBAAIA,UAAU,iBAAd,oCACF,yBAAKA,UAAU,mBACb,2BAAOK,QAAQ,gBAAgBL,UAAU,0BAAzC,QACA,4BAAQS,KAAK,UAAUR,GAAG,gBAAgBiB,aAAa,OAAOhB,SAAU,SAACY,GAAD,OAAO,EAAKX,MAAMgB,qBAAqBL,KAC7G,4BAAQE,MAAM,QAAd,SACA,4BAAQA,MAAM,QAAd,SACA,4BAAQA,MAAM,QAAd,SACA,4BAAQA,MAAM,QAAd,SACA,4BAAQA,MAAM,QAAd,SACA,4BAAQA,MAAM,QAAd,UAEF,2BAAOX,QAAQ,gBAAgBL,UAAU,0BAAzC,MACA,4BAAQS,KAAK,UAAUR,GAAG,gBAAgBiB,aAAa,OAAOhB,SAAU,SAACY,GAAD,OAAO,EAAKX,MAAMgB,qBAAqBL,KAC7G,4BAAQE,MAAM,QAAd,SACA,4BAAQA,MAAM,QAAd,SACA,4BAAQA,MAAM,QAAd,SACA,4BAAQA,MAAM,QAAd,SACA,4BAAQA,MAAM,QAAd,SACA,4BAAQA,MAAM,QAAd,kB,GA5BaN,aC+FdU,E,4MA1FXC,MAAQ,CACJC,UAAU,G,uDAGJ,IAAD,OAGL,OACI,yBAAKtB,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKC,GAAG,gBAAgBD,UAAU,eAC9B,wBAAIA,UAAU,iBAAd,4BACA,yBAAKC,GAAG,cAAcC,SAAU,SAACY,GAAD,OAAO,EAAKX,MAAMoB,oBAAoBT,KAClE,yBAAKd,UAAU,kBACX,2BAAOC,GAAG,SAASO,KAAK,WAAWR,UAAU,cAAcgB,MAAM,WACjE,2BAAOX,QAAQ,UAAf,WACE,yBAAKL,UAAU,kBACjB,2BAAOC,GAAG,SAASO,KAAK,WAAWR,UAAU,cAAcgB,MAAM,WACjE,2BAAOX,QAAQ,UAAf,WACE,yBAAKL,UAAU,kBACjB,2BAAOC,GAAG,QAAQO,KAAK,WAAWR,UAAU,cAAcgB,MAAM,UAChE,2BAAOX,QAAQ,SAAf,UACE,yBAAKL,UAAU,kBACjB,2BAAOC,GAAG,SAASO,KAAK,WAAWR,UAAU,cAAcgB,MAAM,WACjE,2BAAOX,QAAQ,UAAf,WACE,yBAAKL,UAAU,kBACjB,2BAAOC,GAAG,SAASO,KAAK,WAAWR,UAAU,cAAcgB,MAAM,WACjE,2BAAOX,QAAQ,UAAf,YAGR,0BAAML,UAAS,qBAAgBM,KAAKe,MAAMC,UAAY,YAClDE,QAAS,kBA1BA,EAAKC,SAAS,CAAEH,UAAW,EAAKD,MAAMC,aAyBnD,kBAIA,yBAAKrB,GAAG,eAAeC,SAAU,SAACY,GAAD,OAAO,EAAKX,MAAMoB,oBAAoBT,KACnE,yBAAKd,UAAU,kBACX,2BAAOC,GAAG,YAAYO,KAAK,WAAWR,UAAU,cAAcgB,MAAM,cAChE,2BAAOX,QAAQ,aAAf,cACF,yBAAKL,UAAU,kBACjB,2BAAOC,GAAG,YAAYO,KAAK,WAAWR,UAAU,cAAcgB,MAAM,cAChE,2BAAOX,QAAQ,aAAf,cACF,yBAAKL,UAAU,kBACjB,2BAAOC,GAAG,YAAYO,KAAK,WAAWR,UAAU,cAAcgB,MAAM,cACpE,2BAAOX,QAAQ,aAAf,cACE,yBAAKL,UAAU,kBACjB,2BAAOC,GAAG,QAAQO,KAAK,WAAWR,UAAU,cAAcgB,MAAM,UAC5D,2BAAOX,QAAQ,SAAf,UACF,yBAAKL,UAAU,kBACjB,2BAAOC,GAAG,cAAcO,KAAK,WAAWR,UAAU,cAAcgB,MAAM,gBAClE,2BAAOX,QAAQ,eAAf,gBACF,yBAAKL,UAAU,kBACjB,2BAAOC,GAAG,UAAUO,KAAK,WAAWR,UAAU,cAAcgB,MAAM,YAClE,2BAAOX,QAAQ,WAAf,YACE,yBAAKL,UAAU,kBACjB,2BAAOC,GAAG,UAAUO,KAAK,WAAWR,UAAU,cAAcgB,MAAM,YAClE,2BAAOX,QAAQ,WAAf,YACE,yBAAKL,UAAU,kBACjB,2BAAOC,GAAG,QAAQO,KAAK,WAAWR,UAAU,cAAcgB,MAAM,UAChE,2BAAOX,QAAQ,SAAf,UACE,yBAAKL,UAAU,kBACjB,2BAAOC,GAAG,UAAUO,KAAK,WAAWR,UAAU,cAAcgB,MAAM,YAClE,2BAAOX,QAAQ,WAAf,YACE,yBAAKL,UAAU,kBACjB,2BAAOC,GAAG,UAAUO,KAAK,WAAWR,UAAU,cAAcgB,MAAM,YAClE,2BAAOX,QAAQ,WAAf,YACE,yBAAKL,UAAU,kBACjB,2BAAOC,GAAG,UAAUO,KAAK,WAAWR,UAAU,cAAcgB,MAAM,YAClE,2BAAOX,QAAQ,WAAf,YACE,yBAAKL,UAAU,kBACjB,2BAAOC,GAAG,SAASO,KAAK,WAAWR,UAAU,cAAcgB,MAAM,WACjE,2BAAOX,QAAQ,UAAf,WACE,yBAAKL,UAAU,kBACjB,2BAAOC,GAAG,QAAQO,KAAK,WAAWR,UAAU,cAAcgB,MAAM,UAChE,2BAAOX,QAAQ,SAAf,UACE,yBAAKL,UAAU,kBACjB,2BAAOC,GAAG,WAAWO,KAAK,WAAWR,UAAU,cAAcgB,MAAM,aACnE,2BAAOX,QAAQ,YAAf,aACE,yBAAKL,UAAU,kBACjB,2BAAOC,GAAG,MAAMO,KAAK,WAAWR,UAAU,cAAcgB,MAAM,QAC9D,2BAAOX,QAAQ,OAAf,gB,GApFJK,a,yBCyDbgB,E,uKA/CP,IASIC,EAAarB,KAAKH,MAAMyB,OAAOC,KAAK,MACpCC,EAAgBxB,KAAKH,MAAM4B,SAASC,OAAS,EAAI1B,KAAKH,MAAM4B,SAASF,KAAK,MAAQvB,KAAKH,MAAM4B,SAC7FE,EAXgB,SAACC,GACjB,IAAIC,EAAQD,EAAO,GACnB,OAAIA,EAAO,GACD,GAAN,OAAUA,EAAV,QAEaA,EAAO,GAAM,EAAf,UAAuBE,KAAKC,MAAMF,GAAlC,aAA8CD,EAAO,GAArD,kBAAoEC,EAApE,KAMJG,CAAYhC,KAAKH,MAAMoC,SAEtC,OACI,kBAAC,WAAD,KACI,yBAAKvC,UAAU,WAAWwC,IAAKlC,KAAKH,MAAMF,IACtC,yBAAKD,UAAU,wBACX,yBAAKA,UAAU,eAAeyC,IAAG,mDAA8CnC,KAAKH,MAAMuC,OAASC,IAAKrC,KAAKH,MAAMuC,QACnH,yBAAK1C,UAAU,aACX,uBAAGA,UAAU,aACT,yCADJ,IAC0BM,KAAKH,MAAMuC,OAErC,uBAAG1C,UAAU,aACT,wCADJ,IACyBM,KAAKH,MAAMyC,MAEpC,uBAAG5C,UAAU,aACT,4CADJ,IAC6B8B,GAE7B,uBAAG9B,UAAU,aACT,0CADJ,IAC2B2B,GAE3B,uBAAG3B,UAAU,aACT,2CADJ,IAC4BiC,GAE5B,yBAAKjC,UAAU,qDACX,yBAAKA,UAAU,aACX,uBAAG6C,KAAI,6CAAwCvC,KAAKH,MAAM2C,cAAgB9C,UAAU,oCAApF,wB,GA9CbU,aC8FRqC,E,4MAlFX1B,MAAQ,CACJ2B,MAAO,GACPC,SAAS,G,kEAGQ,IAAD,OAChB3C,KAAKmB,SAAS,CAAEwB,SAAS,IAAQ,WAC7BC,IAAMC,IAAI,sIACTC,MAAK,SAAAC,GACF,EAAK5B,SAAS,CAAEuB,MAAOK,EAASC,KAAML,SAAS,OAElDM,OAAM,SAAAC,GACH,EAAK/B,SAAS,CAAEwB,SAAS,Y,+BAK3B,IAAD,OACDQ,EAAgBnD,KAAKe,MAAM2B,MAAMU,QAAO,SAAAC,GAAI,OAC5CA,EAAKpB,SAAW,EAAKpC,MAAMoC,SACxBoB,EAAKpB,SAAW,EAAKpC,MAAMoC,SAC1BoB,EAAKf,MAAQ,EAAKzC,MAAMyD,cAAgBD,EAAKf,MAAQ,EAAKzC,MAAM0D,aAAe,KAevF,OAZIvD,KAAKH,MAAM2D,cACXL,EAAgBA,EAAcC,QAAO,SAAAC,GAAI,OACrCA,EAAKI,WAAa,EAAK5D,MAAM2D,gBAIjCxD,KAAKH,MAAMyB,OAAOI,SAClByB,EAAgBA,EAAcC,QAAO,SAAAC,GAAI,OACrCA,EAAK/B,OAAOoC,MAAK,SAAAC,GAAC,OAAI,EAAK9D,MAAMyB,OAAOsC,SAASD,UAKrD,kBAAC,WAAD,KACI,yBAAKjE,UAAU,OACX,yBAAKA,UAAU,aACX,yBAAKC,GAAG,WACHwD,EAAczB,OAAS,GACxB,2CACc,gCAASyB,EAAczB,QADrC,aAI0B,IAAzByB,EAAczB,QACf,0CACa,qCADb,YAIEyB,EAAczB,QAChB,qEAKZ,yBAAKhC,UAAU,OACVM,KAAKe,MAAM4B,SAAW,kBAACkB,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,UACxD,0BAAMrE,UAAU,WAAhB,eAECyD,EAAca,KAAI,SAACX,GAChB,OACI,kBAAC,EAAD,CACInB,IAAKmB,EAAK1D,GACVA,GAAI0D,EAAK1D,GACTyC,MAAOiB,EAAKjB,MACZE,KAAMe,EAAKf,KACXb,SAAU4B,EAAK5B,SACfH,OAAQ+B,EAAK/B,OACbW,QAASoB,EAAKpB,QACdO,aAAca,EAAKb,aACnByB,QAASZ,EAAKY,mB,GAjFvB7D,aCSR8D,E,uKAVP,OACI,gCACI,mF,GALK9D,aCwGN+D,G,wDA9Fb,WAAYtE,GAAQ,IAAD,8BACjB,cAAMA,IAWRC,YAAc,kBAAM,EAAKqB,SAAS,CAAClB,YAAa,EAAKc,MAAMd,cAZxC,EAanBK,sBAAwB,kBAAM,EAAKa,SAAS,CAAEqC,aAAc,EAAKzC,MAAM0C,WAbpD,EAcnBhD,sBAAwB,SAAAD,GAAC,OAAI,EAAKW,SAAS,CAAEc,QAASmC,SAAS5D,EAAE6D,OAAO3D,UAdrD,EAenBG,qBAAuB,SAACL,GACtB,IAAM8D,EAASF,SAAS5D,EAAE6D,OAAO3D,OAC3B6D,EAAgB/D,EAAE6D,OAAOE,cAEX,kBAAhB/D,EAAE6D,OAAO1E,KACP2E,EAAS,EAAKvD,MAAMwC,cACtB,EAAKpC,SAAS,CACZmC,aAAcgB,EACdf,aAAce,IAEhBE,SAASC,cAAc,kBAAkBF,cAAgBA,GAEzD,EAAKpD,SAAS,CACZmC,aAAcgB,KAKA,kBAAhB9D,EAAE6D,OAAO1E,KACPa,EAAE6D,OAAO3D,OAAS,EAAKK,MAAMuC,aAC/B,EAAKnC,SAAS,CACZoC,aAAce,KAGhB,EAAKnD,SAAS,CACZoC,aAAc,EAAKxC,MAAMuC,eAE3BkB,SAASC,cAAc,kBAAkBF,cAAgBC,SAASC,cAAc,kBAAkBF,iBA1CrF,EA+CnBtD,oBAAsB,SAACT,GACrB,IAAIkE,EAAQlE,EAAE6D,OAAO3D,MAErB,GAAK,EAAKK,MAAMO,OAAOsC,SAASc,GAIzB,CACH,IAAIpD,EAAM,YAAO,EAAKP,MAAMO,QACxBqD,EAAQrD,EAAOsD,QAAQpE,EAAE6D,OAAO3D,OACpCY,EAAOuD,OAAOF,EAAO,GACrB,EAAKxD,SAAS,CAAEG,OAAQA,SAP1B,EAAKH,SAAS,CACZG,OAAO,GAAD,mBAAM,EAAKP,MAAMO,QAAjB,CAAyBoD,OAlDnC,EAAK3D,MAAQ,CACTd,YAAY,EACZgC,QAAS,KACTqB,aAAc,KACdC,aAAc,KACdC,aAAa,EACblC,OAAQ,IARK,E,qDA+DjB,OACE,yBAAK3B,GAAG,eAAeD,UAAS,UAAKM,KAAKe,MAAMd,YAAc,SAC5D,0BACI6E,IAAI,aACJvC,KAAK,wEACLwC,UAAU,0EACVC,YAAY,cAEhB,kBAAC,EAAD,CACE/E,WAAYD,KAAKe,MAAMd,WACvBH,YAAaE,KAAKF,cAEpB,yBAAKJ,UAAU,aACb,kBAAC,EAAD,CAAiBY,sBAAuBN,KAAKM,wBAC7C,kBAAC,EAAD,CAAiBG,sBAAuBT,KAAKS,wBAC7C,kBAAC,EAAD,CAAeQ,oBAAqBjB,KAAKiB,sBACzC,kBAAC,EAAD,CAAgBJ,qBAAsBb,KAAKa,uBAC3C,kBAAC,EAAD,CACE2C,YAAaxD,KAAKe,MAAMyC,YACxBvB,QAASjC,KAAKe,MAAMkB,QACpBqB,aAActD,KAAKe,MAAMuC,aACzBC,aAAcvD,KAAKe,MAAMwC,aACzBjC,OAAQtB,KAAKe,MAAMO,UAGvB,kBAAC,EAAD,W,GAzFUlB,cCCE6E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFhB,SAASiB,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9C,MAAK,SAAA+C,GACJA,EAAaC,gBAEd7C,OAAM,SAAAC,GACL6C,QAAQ7C,MAAMA,EAAM8C,c","file":"static/js/main.6835218e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Header extends Component {\r\n    static propTypes = {\r\n        nightTheme: PropTypes.bool.isRequired,\r\n        switchTheme: PropTypes.func.isRequired\r\n    }    \r\n\r\n    render() {\r\n        return (\r\n            <header>\r\n                <h1 className=\"header-main\">What to Watch</h1>\r\n                <div id=\"theme-switcher\" onChange={() => this.props.switchTheme()}>\r\n\t\t\t        <label htmlFor=\"theme\">\r\n                        {this.props.nightTheme && \"Night \" }    \r\n                        {!this.props.nightTheme && \"Day \" }\r\n                        theme \r\n                    </label>\r\n\t\t\t        <input type=\"checkbox\" name=\"theme\" id=\"theme\" />\r\n\t\t        </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FilterByWatched extends Component {\r\n    static propTypes = {\r\n        handleFilterByWatched: PropTypes.func.isRequired\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div id=\"filter-watched\" className=\"film-filter centered\">\r\n                        <label htmlFor=\"watched\">Hide films I have watched</label>\r\n                        <input \r\n                            type=\"checkbox\" \r\n                            name=\"watched\" \r\n                            id=\"watched\" \r\n                            onChange={() => this.props.handleFilterByWatched()} \r\n                        /> \r\n                    </div>  \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilterByWatched;\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass FilterByRuntime extends Component {\r\n    static propTypes = {\r\n        handleFilterByRuntime: PropTypes.func.isRequired\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div id=\"filter-runtime\" className=\"film-filter\">\r\n                        <div id=\"runtimes\">\r\n                            <h2 className=\"filter-header\">How much time do you have?</h2>\t\r\n                                <div id=\"runtimes-filters\" onChange={(e) => this.props.handleFilterByRuntime(e)}>\r\n                                    <div className=\"runtime-filter\">\r\n                                        <input \r\n                                            type=\"radio\" \r\n                                            className=\"film-times\" \r\n                                            name=\"runtime\" \r\n                                            id=\"runtime-90\"\r\n                                            value=\"90\"\r\n                                                />\r\n                                        <label htmlFor=\"runtime-90\">1h 30min</label>\r\n                                    </div><div className=\"runtime-filter\">\r\n                                        <input \r\n                                            type=\"radio\" \r\n                                            className=\"film-times\" \r\n                                            name=\"runtime\" \r\n                                            id=\"runtime-120\"\r\n                                            value=\"120\"\r\n                                                />\r\n                                            <label htmlFor=\"runtime-120\">2h</label>\r\n                                    </div><div className=\"runtime-filter\">\r\n                                        <input \r\n                                            type=\"radio\" \r\n                                            className=\"film-times\" \r\n                                            name=\"runtime\" \r\n                                            id=\"runtime-150\"\r\n                                            value=\"150\"\r\n                                                />\r\n                                        <label htmlFor=\"runtime-150\">2h 30min</label>\r\n                                    </div><div className=\"runtime-filter\">\r\n                                        <input \r\n                                            type=\"radio\" \r\n                                            className=\"film-times\" \r\n                                            name=\"runtime\" \r\n                                            id=\"runtime-180\"\r\n                                            value=\"180\"\r\n                                                />\r\n                                        <label htmlFor=\"runtime-180\">3h</label>\r\n                                    </div><div className=\"runtime-filter\">\r\n                                        <input \r\n                                            type=\"radio\" \r\n                                            className=\"film-times\" \r\n                                            name=\"runtime\" \r\n                                            id=\"runtime-all\"\r\n                                            value=\"9999\"\r\n                                        />\r\n                                        <label htmlFor=\"runtime-all\">All the time in world</label>\r\n                                    </div>    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilterByRuntime\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass FilterByDecade extends Component {\r\n  static propTypes = {\r\n    handleFilterByDecade: PropTypes.func.isRequired,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n            <div id=\"filter-decades\" className=\"film-filter\">\r\n              <h2 className=\"filter-header\">Which era are you interested on?</h2>\r\n            <div className=\"decades-filters\">\r\n              <label htmlFor=\"oldest-decade\" className=\"decades-filters__label\">From</label>\r\n              <select name=\"decades\" id=\"oldest-decade\" defaultValue=\"1960\" onChange={(e) => this.props.handleFilterByDecade(e)}>\r\n                <option value=\"1960\">1960s</option>\r\n                <option value=\"1970\">1970s</option>\r\n                <option value=\"1980\">1980s</option>\r\n                <option value=\"1990\">1990s</option>\r\n                <option value=\"2000\">2000s</option>\r\n                <option value=\"2010\">2010s</option>\r\n              </select>\r\n              <label htmlFor=\"newest-decade\" className=\"decades-filters__label\">To</label>\r\n              <select name=\"decades\" id=\"newest-decade\" defaultValue=\"2010\" onChange={(e) => this.props.handleFilterByDecade(e)}>\r\n                <option value=\"1960\">1960s</option>\r\n                <option value=\"1970\">1970s</option>\r\n                <option value=\"1980\">1980s</option>\r\n                <option value=\"1990\">1990s</option>\r\n                <option value=\"2000\">2000s</option>\r\n                <option value=\"2010\">2010s</option>\r\n              </select>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterByDecade;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FilterByGenre extends Component {\r\n    static propTypes = {\r\n        handleFilterByGenre: PropTypes.func.isRequired\r\n    }\r\n\r\n    state = {\r\n        expanded: false\r\n    }\r\n\r\n    render() {\r\n        const toggleExpanded = () => this.setState({ expanded: !this.state.expanded });\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div id=\"filter-genres\" className=\"film-filter\">\r\n                        <h2 className=\"filter-header\">What genres do you like?</h2>\t\r\n                        <div id=\"main-genres\" onChange={(e) => this.props.handleFilterByGenre(e)}>\r\n                            <div className=\"genre-selector\">\r\n                                <input id=\"action\" type=\"checkbox\" className=\"genre-items\" value=\"action\" />\r\n                                <label htmlFor=\"action\">action</label>    \r\n                            </div><div className=\"genre-selector\">\r\n                                <input id=\"comedy\" type=\"checkbox\" className=\"genre-items\" value=\"comedy\" />\r\n                                <label htmlFor=\"comedy\">comedy</label>    \r\n                            </div><div className=\"genre-selector\">\r\n                                <input id=\"drama\" type=\"checkbox\" className=\"genre-items\" value=\"drama\" />\r\n                                <label htmlFor=\"drama\">drama</label>    \r\n                            </div><div className=\"genre-selector\">\r\n                                <input id=\"horror\" type=\"checkbox\" className=\"genre-items\" value=\"horror\" />\r\n                                <label htmlFor=\"horror\">horror</label>    \r\n                            </div><div className=\"genre-selector\">\r\n                                <input id=\"sci-fi\" type=\"checkbox\" className=\"genre-items\" value=\"sci-fi\" />\r\n                                <label htmlFor=\"sci-fi\">sci-fi</label>    \r\n                            </div> \r\n                        </div>\r\n                        <span className={`cta-expand ${this.state.expanded && 'expanded'}`}\r\n                            onClick={() => toggleExpanded()}>\r\n                            See all genres\r\n                        </span>\r\n                        <div id=\"extra-genres\" onChange={(e) => this.props.handleFilterByGenre(e)}>\r\n                            <div className=\"genre-selector\">\r\n                                <input id=\"adventure\" type=\"checkbox\" className=\"genre-items\" value=\"adventure\" />\r\n                                    <label htmlFor=\"adventure\">adventure</label>\r\n                            </div><div className=\"genre-selector\">\r\n                                <input id=\"animation\" type=\"checkbox\" className=\"genre-items\" value=\"animation\" />\r\n                                    <label htmlFor=\"animation\">animation</label>\r\n                            </div><div className=\"genre-selector\">\r\n                                <input id=\"biography\" type=\"checkbox\" className=\"genre-items\" value=\"biography\" />\r\n                                <label htmlFor=\"biography\">biography</label>\r\n                            </div><div className=\"genre-selector\">\r\n                                <input id=\"crime\" type=\"checkbox\" className=\"genre-items\" value=\"crime\" />\r\n                                    <label htmlFor=\"crime\">crime</label>\r\n                            </div><div className=\"genre-selector\">\r\n                                <input id=\"documentary\" type=\"checkbox\" className=\"genre-items\" value=\"documentary\" />\r\n                                    <label htmlFor=\"documentary\">documentary</label>\r\n                            </div><div className=\"genre-selector\">\r\n                                <input id=\"fantasy\" type=\"checkbox\" className=\"genre-items\" value=\"fantasy\" />\r\n                                <label htmlFor=\"fantasy\">fantasy</label>\r\n                            </div><div className=\"genre-selector\">\r\n                                <input id=\"history\" type=\"checkbox\" className=\"genre-items\" value=\"history\" />\r\n                                <label htmlFor=\"history\">history</label>\r\n                            </div><div className=\"genre-selector\">\r\n                                <input id=\"music\" type=\"checkbox\" className=\"genre-items\" value=\"music\" />\r\n                                <label htmlFor=\"music\">music</label>\r\n                            </div><div className=\"genre-selector\">\r\n                                <input id=\"musical\" type=\"checkbox\" className=\"genre-items\" value=\"musical\" />\r\n                                <label htmlFor=\"musical\">musical</label>\r\n                            </div><div className=\"genre-selector\">\r\n                                <input id=\"mystery\" type=\"checkbox\" className=\"genre-items\" value=\"mystery\" />\r\n                                <label htmlFor=\"mystery\">mystery</label>\r\n                            </div><div className=\"genre-selector\">\r\n                                <input id=\"romance\" type=\"checkbox\" className=\"genre-items\" value=\"romance\" />\r\n                                <label htmlFor=\"romance\">romance</label>\r\n                            </div><div className=\"genre-selector\">\r\n                                <input id=\"sci-Fi\" type=\"checkbox\" className=\"genre-items\" value=\"sci-Fi\" />\r\n                                <label htmlFor=\"sci-Fi\">sci-Fi</label>\r\n                            </div><div className=\"genre-selector\">\r\n                                <input id=\"sport\" type=\"checkbox\" className=\"genre-items\" value=\"sport\" />\r\n                                <label htmlFor=\"sport\">sport</label>\r\n                            </div><div className=\"genre-selector\">\r\n                                <input id=\"thriller\" type=\"checkbox\" className=\"genre-items\" value=\"thriller\" />\r\n                                <label htmlFor=\"thriller\">thriller</label>\r\n                            </div><div className=\"genre-selector\">\r\n                                <input id=\"war\" type=\"checkbox\" className=\"genre-items\" value=\"war\" />\r\n                                <label htmlFor=\"war\">war</label>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>        \t\t\r\n                </div>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilterByGenre","import React, { Fragment , Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FilmCard extends Component {\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n        year: PropTypes.number.isRequired,\r\n        director: PropTypes.array.isRequired,\r\n        genres: PropTypes.array.isRequired,\r\n        whereToWatch: PropTypes.string.isRequired\r\n    }\r\n\r\n    render() {\r\n        const convertTime = (time) => {\r\n            let hours = time / 60;\r\n            if (time < 60){\r\n                return `${time}mins`;\r\n            } \r\n            let fullTime = ((time % 60) > 0) ? `${Math.floor(hours)}h ${(time % 60)}mins` : `${hours}h`;\r\n            return fullTime;\r\n        }\r\n\r\n        let fullGenres = this.props.genres.join(\", \");\r\n        let fullDirector = (this.props.director.length > 1 ? this.props.director.join(\", \") : this.props.director);\r\n        let fullTime = convertTime(this.props.runtime);\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"col-md-4\" key={this.props.id}>\r\n                    <div className=\"card mb-4 box-shadow\">\r\n                        <img className=\"card-img-top\" src={`https://via.placeholder.com/336x255?text=${this.props.title}`} alt={this.props.title} />\r\n                        <div className=\"card-body\">                            \r\n                            <p className=\"card-text\">\r\n                                <span>Title: </span> {this.props.title}\r\n                            </p>\r\n                            <p className=\"card-text\">\r\n                                <span>Year: </span> {this.props.year}\r\n                            </p>\r\n                            <p className=\"card-text\">\r\n                                <span>Director: </span> {fullDirector}\r\n                            </p>\r\n                            <p className=\"card-text\">\r\n                                <span>Genres: </span> {fullGenres}\r\n                            </p>\r\n                            <p className=\"card-text\">\r\n                                <span>Runtime: </span> {fullTime}\r\n                            </p>\r\n                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <div className=\"btn-group\">\r\n                                    <a href={`https://www.justwatch.com/uk/movie/${this.props.whereToWatch}`} className=\"btn btn-sm btn-outline-secondary\">Watch Film</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>    \r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilmCard;","import React, { Fragment , Component } from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport FilmCard from './FilmCard';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass FilmList extends Component {\r\n    static propTypes = {\r\n        hideWatched: PropTypes.bool.isRequired,\r\n        runtime: PropTypes.number.isRequired,\r\n        oldestDecade: PropTypes.number.isRequired,\r\n        newestDecade: PropTypes.number.isRequired,\r\n        genres: PropTypes.array.isRequired\r\n    }\r\n\r\n    state = {\r\n        films: [],\r\n        loading: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ loading: true }, () => {\r\n            axios.get('https://gist.githubusercontent.com/mklmng/fa894dc9c86dfed34e45063adcf1b73e/raw/aaebe9185fbb4b1ebcaf5343335168c9d2898f9a/Films.json')\r\n            .then(response => {\r\n                this.setState({ films: response.data, loading: false })\r\n            })\r\n            .catch(error => {\r\n                this.setState({ loading: false })\r\n            });\r\n        });\r\n    }   \r\n\r\n    render() {\r\n        let filteredFilms = this.state.films.filter(film => \r\n            film.runtime <= this.props.runtime\r\n            && film.runtime <= this.props.runtime\r\n            && (film.year >= this.props.oldestDecade && film.year <= this.props.newestDecade + 9) \r\n        )\r\n\r\n        if (this.props.hideWatched){\r\n            filteredFilms = filteredFilms.filter(film => \r\n                film.watched === !this.props.hideWatched \r\n            )               \r\n        } \r\n\r\n        if (this.props.genres.length){\r\n            filteredFilms = filteredFilms.filter(film => \r\n                film.genres.some(g => this.props.genres.includes(g))\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div id=\"results\">\r\n                            {filteredFilms.length > 1 && \r\n                            <span>\r\n                                There are <strong>{filteredFilms.length}</strong> matches.\r\n                            </span>\r\n                            }\r\n                            {filteredFilms.length === 1 &&\r\n                            <span>\r\n                                There is <strong>1</strong> match.\r\n                            </span>\r\n                            }\r\n                            {!filteredFilms.length && \r\n                            <span>Sorry, there aren't any matches.</span>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {this.state.loading && <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>}\r\n                    {filteredFilms.map((film) => {\r\n                        return (\r\n                            <FilmCard \r\n                                key={film.id}\r\n                                id={film.id}\r\n                                title={film.title}\r\n                                year={film.year}\r\n                                director={film.director}\r\n                                genres={film.genres}\r\n                                runtime={film.runtime}\r\n                                whereToWatch={film.whereToWatch}\r\n                                trailer={film.trailer}\r\n                            />\r\n                        )                            \r\n                    })}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    } \r\n}\r\n\r\nexport default FilmList","import React, { Component } from 'react'\r\n\r\nclass Footer extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <footer>\r\n                <small>\r\n                    Work in progress. New features coming soon.\r\n                </small>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React, { Component } from 'react';\nimport Header from './components/layout/Header';\nimport FilterByWatched from './components/filters/FilterByWatched';\nimport FilterByRuntime from './components/filters/FilterByRuntime';\nimport FilterByDecade from './components/filters/FilterByDecade';\nimport FilterByGenre from './components/filters/FilterByGenre';\nimport FilmList from './components/films/FilmList';\nimport Footer from './components/layout/Footer';\n\nimport './styles/styles.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        nightTheme: false,\n        runtime: 9999,\n        oldestDecade: 1960,\n        newestDecade: 2010,\n        hideWatched: false,\n        genres: []\n    };\n  }\n\n  switchTheme = () => this.setState({nightTheme: !this.state.nightTheme });  \n  handleFilterByWatched = () => this.setState({ hideWatched: !this.state.watched });\n  handleFilterByRuntime = e => this.setState({ runtime: parseInt(e.target.value) }); \n  handleFilterByDecade = (e) => {\n    const decade = parseInt(e.target.value);\n    const selectedIndex = e.target.selectedIndex;\n\n    if (e.target.id === \"oldest-decade\"){\n      if (decade > this.state.newestDecade){\n        this.setState({ \n          oldestDecade: decade,\n          newestDecade: decade\n        })\n        document.querySelector(\"#newest-decade\").selectedIndex = selectedIndex;\n      } else {\n        this.setState({\n          oldestDecade: decade,\n        })\n      }\n    }\n\n    if (e.target.id === \"newest-decade\"){\n      if (e.target.value >= this.state.oldestDecade){\n        this.setState({ \n          newestDecade: decade\n        })\n      } else {\n        this.setState({\n          newestDecade: this.state.oldestDecade\n        })\n        document.querySelector(\"#newest-decade\").selectedIndex = document.querySelector(\"#oldest-decade\").selectedIndex;\n      }\n    }\n  }   \n\n  handleFilterByGenre = (e) => {\n    let genre = e.target.value;\n\n    if (!this.state.genres.includes(genre)){\n      this.setState({\n        genres: [...this.state.genres, genre]\n      })\n    } else {\n        let genres = [...this.state.genres];\n        let index = genres.indexOf(e.target.value);\n        genres.splice(index, 1);\n        this.setState({ genres: genres })\n    }\n  }\n  \n  render(){\n    return (\n      <div id=\"full-wrapper\" className={`${this.state.nightTheme && 'dark'}`}>\n        <link\n            rel=\"stylesheet\"\n            href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\"\n            integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\"\n            crossOrigin=\"anonymous\"\n          />\n        <Header\n          nightTheme={this.state.nightTheme}\n          switchTheme={this.switchTheme}\n        />\n        <div className=\"container\">\n          <FilterByWatched handleFilterByWatched={this.handleFilterByWatched} />\n          <FilterByRuntime handleFilterByRuntime={this.handleFilterByRuntime} />\n          <FilterByGenre handleFilterByGenre={this.handleFilterByGenre} />\n          <FilterByDecade handleFilterByDecade={this.handleFilterByDecade} />\n          <FilmList \n            hideWatched={this.state.hideWatched}\n            runtime={this.state.runtime}\n            oldestDecade={this.state.oldestDecade}\n            newestDecade={this.state.newestDecade}\n            genres={this.state.genres}\n            />\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}