{"version":3,"sources":["components/layout/Header.js","components/filters/FilterByWatched.js","components/layout/RadioButton.js","components/filters/FilterByRuntime.js","components/layout/Dropdown.js","components/filters/FilterByDecade.js","components/layout/Checkbox.js","components/filters/FilterByGenre.js","components/films/FilmCard.js","components/films/FilmList.js","components/layout/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","id","onChange","props","switchTheme","htmlFor","this","nightTheme","type","name","Component","FilterByWatched","handleFilterByWatched","RadioButton","runtimeId","value","runtime","runtimeText","FilterByRuntime","state","runtimes","e","handleFilterByRuntime","map","r","index","key","Dropdown","decade","FilterByDecade","decades","defaultValue","handleFilterByDecade","d","Checkbox","genre","FilterByGenre","expanded","mainGenres","extraGenres","handleFilterByGenre","g","onClick","setState","FilmCard","fullGenres","genres","join","fullDirector","director","length","fullTime","time","hours","Math","floor","convertTime","src","title","alt","year","href","whereToWatch","FilmList","films","loading","axios","get","then","response","data","catch","error","filteredFilms","filter","film","oldestDecade","newestDecade","hideWatched","watched","some","includes","Spinner","animation","role","trailer","Footer","App","parseInt","target","selectedIndex","document","querySelector","indexOf","splice","rel","integrity","crossOrigin","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.83a346e6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Header extends Component {\r\n    static propTypes = {\r\n        nightTheme: PropTypes.bool.isRequired,\r\n        switchTheme: PropTypes.func.isRequired\r\n    }    \r\n\r\n    render() {\r\n        return (\r\n            <header>\r\n                <h1 className=\"header-main\">What to Watch</h1>\r\n                <div id=\"theme-switcher\" onChange={() => this.props.switchTheme()}>\r\n\t\t\t        <label htmlFor=\"theme\">\r\n                        {this.props.nightTheme && \"Night \" }    \r\n                        {!this.props.nightTheme && \"Day \" }\r\n                        theme \r\n                    </label>\r\n\t\t\t        <input type=\"checkbox\" name=\"theme\" id=\"theme\" />\r\n\t\t        </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FilterByWatched extends Component {\r\n    static propTypes = {\r\n        handleFilterByWatched: PropTypes.func.isRequired\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div id=\"filter-watched\" className=\"film-filter centered\">\r\n                        <label htmlFor=\"watched\">Hide films I have watched</label>\r\n                        <input \r\n                            type=\"checkbox\" \r\n                            name=\"watched\" \r\n                            id=\"watched\" \r\n                            onChange={() => this.props.handleFilterByWatched()} \r\n                        /> \r\n                    </div>  \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilterByWatched;\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport class RadioButton extends Component {\r\n    static propTypes = {\r\n        runtime: PropTypes.string.isRequired,\r\n        runtimeText: PropTypes.string.isRequired,\r\n        runtimeId: PropTypes.string.isRequired\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"runtime-filter\">\r\n                <input \r\n                    type=\"radio\" \r\n                    className=\"film-times\" \r\n                    name=\"runtime\" \r\n                    id={this.props.runtimeId}\r\n                    value={this.props.runtime}\r\n                        />\r\n                <label htmlFor={this.props.runtimeId}>{this.props.runtimeText}</label>\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default RadioButton\r\n","import React, { Component } from 'react'\r\nimport RadioButton from '../layout/RadioButton'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass FilterByRuntime extends Component {\r\n    static propTypes = {\r\n        handleFilterByRuntime: PropTypes.func.isRequired\r\n    }\r\n\r\n    state = {\r\n        runtimes: [\r\n            {\r\n                runtime: \"90\",\r\n                runtimeId: \"runtime-90\",\r\n                runtimeText: \"1h 30min\"\r\n            },\r\n            {\r\n                runtime: \"120\",\r\n                runtimeId: \"runtime-120\",\r\n                runtimeText: \"2h\"\r\n            },\r\n            {\r\n                runtime: \"150\",\r\n                runtimeId: \"runtime-150\",\r\n                runtimeText: \"2h 30min\"\r\n            },\r\n            {\r\n                runtime: \"180\",\r\n                runtimeId: \"runtime-180\",\r\n                runtimeText: \"3h\"\r\n            },\r\n            {\r\n                runtime: \"9999\",\r\n                runtimeId: \"runtime-all\",\r\n                runtimeText: \"All the time in world\"\r\n            }\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div id=\"filter-runtime\" className=\"film-filter\">\r\n                        <div id=\"runtimes\">\r\n                            <h2 className=\"filter-header\">How much time do you have?</h2>\t\r\n                                <div id=\"runtimes-filters\" onChange={(e) => this.props.handleFilterByRuntime(e)}>\r\n                                    {this.state.runtimes.map((r, index) => {\r\n                                        return (\r\n                                            <RadioButton key={index}\r\n                                                runtime={r.runtime}\r\n                                                runtimeId={r.runtimeId}\r\n                                                runtimeText={r.runtimeText}\r\n                                            />\r\n                                            )                            \r\n                                    })}  \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilterByRuntime\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Dropdown extends Component {\r\n    static propTypes = {\r\n        decade: PropTypes.number.isRequired\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <option value={this.props.decade}>{this.props.decade}</option>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dropdown\r\n","import React, { Component } from \"react\";\r\nimport Dropdown from '../layout/Dropdown';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass FilterByDecade extends Component {\r\n  static propTypes = {\r\n    handleFilterByDecade: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = { decades: [ 1960, 1970, 1980, 1990, 2000 , 2010 ] }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n            <div id=\"filter-decades\" className=\"film-filter\">\r\n              <h2 className=\"filter-header\">Which era are you interested on?</h2>\r\n            <div className=\"decades-filters\">\r\n              <label htmlFor=\"oldest-decade\" className=\"decades-filters__label\">From</label>\r\n              <select name=\"decades\" id=\"oldest-decade\" defaultValue=\"1960\" onChange={(e) => this.props.handleFilterByDecade(e)}>\r\n                {this.state.decades.map((d, index) => {\r\n                  return (\r\n                      <Dropdown key={index}\r\n                          decade={d}\r\n                      />\r\n                      )                            \r\n                  })\r\n                }  \r\n              </select>\r\n              <label htmlFor=\"newest-decade\" className=\"decades-filters__label\">To</label>\r\n              <select name=\"decades\" id=\"newest-decade\" defaultValue=\"2010\" onChange={(e) => this.props.handleFilterByDecade(e)}>\r\n                {this.state.decades.map((d, index) => {\r\n                    return (\r\n                        <Dropdown key={index}\r\n                            decade={d}\r\n                        />\r\n                        )                            \r\n                    })\r\n                }\r\n              </select>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterByDecade;\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Checkbox extends Component {\r\n    static propTypes = {\r\n        genre: PropTypes.string.isRequired\r\n    }   \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"genre-selector\">\r\n                <input id={this.props.genre} type=\"checkbox\" className=\"genre-items\" value={this.props.genre} />\r\n                <label htmlFor={this.props.genre}>{this.props.genre}</label>    \r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Checkbox\r\n","import React, { Component } from 'react';\r\nimport Checkbox from '../layout/Checkbox';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FilterByGenre extends Component {\r\n    static propTypes = {\r\n        handleFilterByGenre: PropTypes.func.isRequired\r\n    }\r\n\r\n    state = {\r\n        expanded: false,\r\n        mainGenres: [ \"action\" , \"comedy\", \"drama\" , \"horror\", \"sci-fi\"],\r\n        extraGenres: [\r\n            {\r\n                genre: \"adventure\"\r\n            },\r\n            {\r\n                genre: \"animation\"\r\n            },\r\n            {\r\n                genre: \"biography\"\r\n            },\r\n            {\r\n                genre: \"crime\"\r\n            },\r\n            {   \r\n                genre: \"documentary\"\r\n            },\r\n            {\r\n                genre: \"fantasy\"\r\n            },\r\n            {\r\n                genre: \"history\"\r\n            },\r\n            {\r\n                genre: \"music\"\r\n            },\r\n            {\r\n                genre: \"musical\"\r\n            },\r\n            {\r\n                genre: \"romance\"\r\n            },\r\n            {\r\n                genre: \"sport\"\r\n            },\r\n            {\r\n                genre: \"thriller\"\r\n            },\r\n            {\r\n                genre: \"war\"\r\n            }\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        const toggleExpanded = () => this.setState({ expanded: !this.state.expanded });\r\n\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <div id=\"filter-genres\" className=\"film-filter\">\r\n                        <h2 className=\"filter-header\">What genres do you like?</h2>\t\r\n                        <div id=\"main-genres\" onChange={(e) => this.props.handleFilterByGenre(e)}>\r\n                            {this.state.mainGenres.map((g, index) => {\r\n                            return (\r\n                                <Checkbox key={index} genre={g} />\r\n                            )                            \r\n                             })}\r\n                        </div>\r\n                        <span className={`cta-expand ${this.state.expanded && 'expanded'}`}\r\n                            onClick={() => toggleExpanded()}>\r\n                            See all genres\r\n                        </span>\r\n                        <div id=\"extra-genres\" onChange={(e) => this.props.handleFilterByGenre(e)}>\r\n                            {this.state.extraGenres.map((g, index) => {\r\n                                return (\r\n                                    <Checkbox key={index} genre={g.genre} />\r\n                                )                            \r\n                                })\r\n                            }\r\n                        </div>\r\n                    </div>        \t\t\r\n                </div>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilterByGenre","import React, { Fragment , Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass FilmCard extends Component {\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n        year: PropTypes.number.isRequired,\r\n        director: PropTypes.array.isRequired,\r\n        genres: PropTypes.array.isRequired,\r\n        whereToWatch: PropTypes.string.isRequired\r\n    }\r\n\r\n    render() {\r\n        const convertTime = (time) => {\r\n            let hours = time / 60;\r\n            if (time < 60){\r\n                return `${time}mins`;\r\n            } \r\n            let fullTime = ((time % 60) > 0) ? `${Math.floor(hours)}h ${(time % 60)}mins` : `${hours}h`;\r\n            return fullTime;\r\n        }\r\n\r\n        let fullGenres = this.props.genres.join(\", \");\r\n        let fullDirector = (this.props.director.length > 1 ? this.props.director.join(\", \") : this.props.director);\r\n        let fullTime = convertTime(this.props.runtime);\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"col-md-4\" key={this.props.id}>\r\n                    <div className=\"card mb-4 box-shadow\">\r\n                        <img className=\"card-img-top\" src={`https://via.placeholder.com/336x255?text=${this.props.title}`} alt={this.props.title} />\r\n                        <div className=\"card-body\">                            \r\n                            <p className=\"card-text\">\r\n                                <span>Title: </span> {this.props.title}\r\n                            </p>\r\n                            <p className=\"card-text\">\r\n                                <span>Year: </span> {this.props.year}\r\n                            </p>\r\n                            <p className=\"card-text\">\r\n                                <span>Director: </span> {fullDirector}\r\n                            </p>\r\n                            <p className=\"card-text\">\r\n                                <span>Genres: </span> {fullGenres}\r\n                            </p>\r\n                            <p className=\"card-text\">\r\n                                <span>Runtime: </span> {fullTime}\r\n                            </p>\r\n                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <div className=\"btn-group\">\r\n                                    <a href={`https://www.justwatch.com/uk/movie/${this.props.whereToWatch}`} className=\"btn btn-sm btn-outline-secondary\">Watch Film</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>    \r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilmCard;","import React, { Fragment , Component } from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport FilmCard from './FilmCard';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass FilmList extends Component {\r\n    static propTypes = {\r\n        hideWatched: PropTypes.bool.isRequired,\r\n        runtime: PropTypes.number.isRequired,\r\n        oldestDecade: PropTypes.number.isRequired,\r\n        newestDecade: PropTypes.number.isRequired,\r\n        genres: PropTypes.array.isRequired\r\n    }\r\n\r\n    state = {\r\n        films: [],\r\n        loading: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ loading: true }, () => {\r\n            axios.get('https://gist.githubusercontent.com/mklmng/fa894dc9c86dfed34e45063adcf1b73e/raw/aaebe9185fbb4b1ebcaf5343335168c9d2898f9a/Films.json')\r\n            .then(response => {\r\n                this.setState({ films: response.data, loading: false })\r\n            })\r\n            .catch(error => {\r\n                this.setState({ loading: false })\r\n            });\r\n        });\r\n    }   \r\n\r\n    render() {\r\n        let filteredFilms = this.state.films.filter(film => \r\n            film.runtime <= this.props.runtime\r\n            && film.runtime <= this.props.runtime\r\n            && (film.year >= this.props.oldestDecade && film.year <= this.props.newestDecade + 9) \r\n        )\r\n\r\n        if (this.props.hideWatched){\r\n            filteredFilms = filteredFilms.filter(film => \r\n                film.watched === !this.props.hideWatched \r\n            )               \r\n        } \r\n\r\n        if (this.props.genres.length){\r\n            filteredFilms = filteredFilms.filter(film => \r\n                film.genres.some(g => this.props.genres.includes(g))\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <div id=\"results\">\r\n                            {filteredFilms.length > 1 && \r\n                            <span>\r\n                                There are <strong>{filteredFilms.length}</strong> matches.\r\n                            </span>\r\n                            }\r\n                            {filteredFilms.length === 1 &&\r\n                            <span>\r\n                                There is <strong>1</strong> match.\r\n                            </span>\r\n                            }\r\n                            {!filteredFilms.length && \r\n                            <span>Sorry, there aren't any matches.</span>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {this.state.loading && <Spinner animation=\"border\" role=\"status\">\r\n                    <span className=\"sr-only\">Loading...</span>\r\n                    </Spinner>}\r\n                    {filteredFilms.map((film) => {\r\n                        return (\r\n                            <FilmCard \r\n                                key={film.id}\r\n                                id={film.id}\r\n                                title={film.title}\r\n                                year={film.year}\r\n                                director={film.director}\r\n                                genres={film.genres}\r\n                                runtime={film.runtime}\r\n                                whereToWatch={film.whereToWatch}\r\n                                trailer={film.trailer}\r\n                            />\r\n                        )                            \r\n                    })}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    } \r\n}\r\n\r\nexport default FilmList","import React, { Component } from 'react'\r\n\r\nclass Footer extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <footer>\r\n                <small>\r\n                    Work in progress. New features coming soon.\r\n                </small>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React, { Component } from 'react';\nimport Header from './components/layout/Header';\nimport FilterByWatched from './components/filters/FilterByWatched';\nimport FilterByRuntime from './components/filters/FilterByRuntime';\nimport FilterByDecade from './components/filters/FilterByDecade';\nimport FilterByGenre from './components/filters/FilterByGenre';\nimport FilmList from './components/films/FilmList';\nimport Footer from './components/layout/Footer';\n\nimport './styles/styles.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        nightTheme: false,\n        runtime: 9999,\n        oldestDecade: 1960,\n        newestDecade: 2010,\n        hideWatched: false,\n        genres: []\n    };\n  }\n\n  switchTheme = () => this.setState({nightTheme: !this.state.nightTheme });  \n  handleFilterByWatched = () => this.setState({ hideWatched: !this.state.watched });\n  handleFilterByRuntime = e => this.setState({ runtime: parseInt(e.target.value) }); \n  handleFilterByDecade = (e) => {\n    const decade = parseInt(e.target.value);\n    const selectedIndex = e.target.selectedIndex;\n\n    if (e.target.id === \"oldest-decade\"){\n      if (decade > this.state.newestDecade){\n        this.setState({ \n          oldestDecade: decade,\n          newestDecade: decade\n        })\n        document.querySelector(\"#newest-decade\").selectedIndex = selectedIndex;\n      } else {\n        this.setState({\n          oldestDecade: decade,\n        })\n      }\n    }\n\n    if (e.target.id === \"newest-decade\"){\n      if (e.target.value >= this.state.oldestDecade){\n        this.setState({ \n          newestDecade: decade\n        })\n      } else {\n        this.setState({\n          newestDecade: this.state.oldestDecade\n        })\n        document.querySelector(\"#newest-decade\").selectedIndex = document.querySelector(\"#oldest-decade\").selectedIndex;\n      }\n    }\n  }   \n\n  handleFilterByGenre = (e) => {\n    let genre = e.target.value;\n\n    if (!this.state.genres.includes(genre)){\n      this.setState({\n        genres: [...this.state.genres, genre]\n      })\n    } else {\n        let genres = [...this.state.genres];\n        let index = genres.indexOf(e.target.value);\n        genres.splice(index, 1);\n        this.setState({ genres: genres })\n    }\n  }\n  \n  render(){\n    return (\n      <div id=\"full-wrapper\" className={`${this.state.nightTheme && 'dark'}`}>\n        <link\n            rel=\"stylesheet\"\n            href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css\"\n            integrity=\"sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk\"\n            crossOrigin=\"anonymous\"\n          />\n        <Header\n          nightTheme={this.state.nightTheme}\n          switchTheme={this.switchTheme}\n        />\n        <div className=\"container\">\n          <FilterByWatched handleFilterByWatched={this.handleFilterByWatched} />\n          <FilterByRuntime handleFilterByRuntime={this.handleFilterByRuntime} />\n          <FilterByGenre handleFilterByGenre={this.handleFilterByGenre} />\n          <FilterByDecade handleFilterByDecade={this.handleFilterByDecade} />\n          <FilmList \n            hideWatched={this.state.hideWatched}\n            runtime={this.state.runtime}\n            oldestDecade={this.state.oldestDecade}\n            newestDecade={this.state.newestDecade}\n            genres={this.state.genres}\n            />\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}